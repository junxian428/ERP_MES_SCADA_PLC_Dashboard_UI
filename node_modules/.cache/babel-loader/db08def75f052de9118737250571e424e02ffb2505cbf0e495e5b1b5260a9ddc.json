{"ast":null,"code":"var util = require('util');\n\n/**\n * One or more topics did not exist for the requested action\n *\n * @param {String|String[]} topics Either an array or single topic name\n *\n * @constructor\n */\nvar TopicsNotExistError = function (topics) {\n  Error.captureStackTrace(this, this);\n  this.topics = topics;\n  this.message = 'The topic(s) ' + topics.toString() + ' do not exist';\n};\nutil.inherits(TopicsNotExistError, Error);\nTopicsNotExistError.prototype.name = 'TopicsNotExistError';\nmodule.exports = TopicsNotExistError;","map":{"version":3,"names":["util","require","TopicsNotExistError","topics","Error","captureStackTrace","message","toString","inherits","prototype","name","module","exports"],"sources":["D:/Project/VUEJSSPRING_CRUD_JWT/vue-crud-api-jwt-vuex/node_modules/kafka-node/lib/errors/TopicsNotExistError.js"],"sourcesContent":["var util = require('util');\n\n/**\n * One or more topics did not exist for the requested action\n *\n * @param {String|String[]} topics Either an array or single topic name\n *\n * @constructor\n */\nvar TopicsNotExistError = function (topics) {\n  Error.captureStackTrace(this, this);\n  this.topics = topics;\n  this.message = 'The topic(s) ' + topics.toString() + ' do not exist';\n};\n\nutil.inherits(TopicsNotExistError, Error);\nTopicsNotExistError.prototype.name = 'TopicsNotExistError';\n\nmodule.exports = TopicsNotExistError;\n"],"mappings":"AAAA,IAAIA,IAAI,GAAGC,OAAO,CAAC,MAAM,CAAC;;AAE1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIC,mBAAmB,GAAG,SAAAA,CAAUC,MAAM,EAAE;EAC1CC,KAAK,CAACC,iBAAiB,CAAC,IAAI,EAAE,IAAI,CAAC;EACnC,IAAI,CAACF,MAAM,GAAGA,MAAM;EACpB,IAAI,CAACG,OAAO,GAAG,eAAe,GAAGH,MAAM,CAACI,QAAQ,CAAC,CAAC,GAAG,eAAe;AACtE,CAAC;AAEDP,IAAI,CAACQ,QAAQ,CAACN,mBAAmB,EAAEE,KAAK,CAAC;AACzCF,mBAAmB,CAACO,SAAS,CAACC,IAAI,GAAG,qBAAqB;AAE1DC,MAAM,CAACC,OAAO,GAAGV,mBAAmB"},"metadata":{},"sourceType":"script","externalDependencies":[]}