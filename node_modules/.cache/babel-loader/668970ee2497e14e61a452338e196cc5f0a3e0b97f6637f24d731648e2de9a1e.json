{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { Consumer } from 'kafka-node';\nexport default {\n  data() {\n    return {\n      messages: [],\n      consumer: null\n    };\n  },\n  mounted() {\n    // Create Kafka consumer\n    const client = new kafka.KafkaClient({\n      kafkaHost: 'localhost:9092'\n    });\n    const topics = [{\n      topic: 'mytopic3'\n    }];\n    const options = {\n      groupId: 'mygroup'\n    };\n    this.consumer = new Consumer(client, topics, options);\n\n    // Handle incoming Kafka messages\n    this.consumer.on('message', message => {\n      console.log('Received message:', message.value);\n      this.messages.push(message);\n    });\n\n    // Handle Kafka consumer errors\n    this.consumer.on('error', error => {\n      console.error('Consumer error:', error);\n    });\n  },\n  beforeDestroy() {\n    // Close Kafka consumer connection when the component is destroyed\n    if (this.consumer) {\n      this.consumer.close();\n    }\n  }\n};","map":{"version":3,"names":["Consumer","data","messages","consumer","mounted","client","kafka","KafkaClient","kafkaHost","topics","topic","options","groupId","on","message","console","log","value","push","error","beforeDestroy","close"],"sources":["D:\\Project\\VUEJSSPRING_CRUD_JWT\\vue-crud-api-jwt-vuex\\src\\views\\Monitor.vue"],"sourcesContent":["// Vue.js component\r\n<template>\r\n  <div>\r\n    <h1>Messages from Kafka:</h1>\r\n    <ul>\r\n      <li v-for=\"message in messages\" :key=\"message.id\">\r\n        {{ message.value }}\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { Consumer } from 'kafka-node';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      messages: [],\r\n      consumer: null,\r\n    };\r\n  },\r\n  mounted() {\r\n    // Create Kafka consumer\r\n    const client = new kafka.KafkaClient({ kafkaHost: 'localhost:9092' });\r\n    const topics = [{ topic: 'mytopic3' }];\r\n    const options = { groupId: 'mygroup' };\r\n    this.consumer = new Consumer(client, topics, options);\r\n\r\n    // Handle incoming Kafka messages\r\n    this.consumer.on('message', (message) => {\r\n      console.log('Received message:', message.value);\r\n      this.messages.push(message);\r\n    });\r\n\r\n    // Handle Kafka consumer errors\r\n    this.consumer.on('error', (error) => {\r\n      console.error('Consumer error:', error);\r\n    });\r\n  },\r\n  beforeDestroy() {\r\n    // Close Kafka consumer connection when the component is destroyed\r\n    if (this.consumer) {\r\n      this.consumer.close();\r\n    }\r\n  },\r\n};\r\n</script>\r\n"],"mappings":";AAaA,SAASA,QAAO,QAAS,YAAY;AAErC,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE;IACZ,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR;IACA,MAAMC,MAAK,GAAI,IAAIC,KAAK,CAACC,WAAW,CAAC;MAAEC,SAAS,EAAE;IAAiB,CAAC,CAAC;IACrE,MAAMC,MAAK,GAAI,CAAC;MAAEC,KAAK,EAAE;IAAW,CAAC,CAAC;IACtC,MAAMC,OAAM,GAAI;MAAEC,OAAO,EAAE;IAAU,CAAC;IACtC,IAAI,CAACT,QAAO,GAAI,IAAIH,QAAQ,CAACK,MAAM,EAAEI,MAAM,EAAEE,OAAO,CAAC;;IAErD;IACA,IAAI,CAACR,QAAQ,CAACU,EAAE,CAAC,SAAS,EAAGC,OAAO,IAAK;MACvCC,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEF,OAAO,CAACG,KAAK,CAAC;MAC/C,IAAI,CAACf,QAAQ,CAACgB,IAAI,CAACJ,OAAO,CAAC;IAC7B,CAAC,CAAC;;IAEF;IACA,IAAI,CAACX,QAAQ,CAACU,EAAE,CAAC,OAAO,EAAGM,KAAK,IAAK;MACnCJ,OAAO,CAACI,KAAK,CAAC,iBAAiB,EAAEA,KAAK,CAAC;IACzC,CAAC,CAAC;EACJ,CAAC;EACDC,aAAaA,CAAA,EAAG;IACd;IACA,IAAI,IAAI,CAACjB,QAAQ,EAAE;MACjB,IAAI,CAACA,QAAQ,CAACkB,KAAK,CAAC,CAAC;IACvB;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}