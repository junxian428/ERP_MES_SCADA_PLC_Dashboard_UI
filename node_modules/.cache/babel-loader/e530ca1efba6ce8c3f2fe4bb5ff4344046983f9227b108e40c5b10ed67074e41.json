{"ast":null,"code":"'use strict';\n\nconst util = require('util');\nconst _ = require('lodash');\nfunction Partitioner() {}\nfunction DefaultPartitioner() {\n  Partitioner.call(this);\n}\nutil.inherits(DefaultPartitioner, Partitioner);\nDefaultPartitioner.prototype.getPartition = function (partitions) {\n  if (partitions && _.isArray(partitions) && partitions.length > 0) {\n    return partitions[0];\n  } else {\n    return 0;\n  }\n};\nfunction CyclicPartitioner() {\n  Partitioner.call(this);\n  this.c = 0;\n}\nutil.inherits(CyclicPartitioner, Partitioner);\nCyclicPartitioner.prototype.getPartition = function (partitions) {\n  if (_.isEmpty(partitions)) return 0;\n  return partitions[this.c++ % partitions.length];\n};\nfunction RandomPartitioner() {\n  Partitioner.call(this);\n}\nutil.inherits(RandomPartitioner, Partitioner);\nRandomPartitioner.prototype.getPartition = function (partitions) {\n  return partitions[Math.floor(Math.random() * partitions.length)];\n};\nfunction KeyedPartitioner() {\n  Partitioner.call(this);\n}\nutil.inherits(KeyedPartitioner, Partitioner);\n\n// Taken from oid package (Dan Bornstein)\n// Copyright The Obvious Corporation.\nKeyedPartitioner.prototype.hashCode = function (stringOrBuffer) {\n  let hash = 0;\n  if (stringOrBuffer) {\n    const string = stringOrBuffer.toString();\n    const length = string.length;\n    for (let i = 0; i < length; i++) {\n      hash = hash * 31 + string.charCodeAt(i) & 0x7fffffff;\n    }\n  }\n  return hash === 0 ? 1 : hash;\n};\nKeyedPartitioner.prototype.getPartition = function (partitions, key) {\n  key = key || '';\n  const index = this.hashCode(key) % partitions.length;\n  return partitions[index];\n};\nfunction CustomPartitioner(partitioner) {\n  Partitioner.call(this);\n  this.getPartition = partitioner;\n}\nutil.inherits(CustomPartitioner, Partitioner);\nmodule.exports.DefaultPartitioner = DefaultPartitioner;\nmodule.exports.CyclicPartitioner = CyclicPartitioner;\nmodule.exports.RandomPartitioner = RandomPartitioner;\nmodule.exports.KeyedPartitioner = KeyedPartitioner;\nmodule.exports.CustomPartitioner = CustomPartitioner;","map":{"version":3,"names":["util","require","_","Partitioner","DefaultPartitioner","call","inherits","prototype","getPartition","partitions","isArray","length","CyclicPartitioner","c","isEmpty","RandomPartitioner","Math","floor","random","KeyedPartitioner","hashCode","stringOrBuffer","hash","string","toString","i","charCodeAt","key","index","CustomPartitioner","partitioner","module","exports"],"sources":["D:/Project/VUEJSSPRING_CRUD_JWT/vue-crud-api-jwt-vuex/node_modules/kafka-node/lib/partitioner.js"],"sourcesContent":["'use strict';\n\nconst util = require('util');\nconst _ = require('lodash');\n\nfunction Partitioner () { }\n\nfunction DefaultPartitioner () {\n  Partitioner.call(this);\n}\nutil.inherits(DefaultPartitioner, Partitioner);\n\nDefaultPartitioner.prototype.getPartition = function (partitions) {\n  if (partitions && _.isArray(partitions) && partitions.length > 0) {\n    return partitions[0];\n  } else {\n    return 0;\n  }\n};\n\nfunction CyclicPartitioner () {\n  Partitioner.call(this);\n  this.c = 0;\n}\nutil.inherits(CyclicPartitioner, Partitioner);\n\nCyclicPartitioner.prototype.getPartition = function (partitions) {\n  if (_.isEmpty(partitions)) return 0;\n  return partitions[this.c++ % partitions.length];\n};\n\nfunction RandomPartitioner () {\n  Partitioner.call(this);\n}\nutil.inherits(RandomPartitioner, Partitioner);\n\nRandomPartitioner.prototype.getPartition = function (partitions) {\n  return partitions[Math.floor(Math.random() * partitions.length)];\n};\n\nfunction KeyedPartitioner () {\n  Partitioner.call(this);\n}\nutil.inherits(KeyedPartitioner, Partitioner);\n\n// Taken from oid package (Dan Bornstein)\n// Copyright The Obvious Corporation.\nKeyedPartitioner.prototype.hashCode = function (stringOrBuffer) {\n  let hash = 0;\n  if (stringOrBuffer) {\n    const string = stringOrBuffer.toString();\n    const length = string.length;\n\n    for (let i = 0; i < length; i++) {\n      hash = ((hash * 31) + string.charCodeAt(i)) & 0x7fffffff;\n    }\n  }\n\n  return (hash === 0) ? 1 : hash;\n};\n\nKeyedPartitioner.prototype.getPartition = function (partitions, key) {\n  key = key || '';\n\n  const index = this.hashCode(key) % partitions.length;\n  return partitions[index];\n};\n\nfunction CustomPartitioner (partitioner) {\n  Partitioner.call(this);\n  this.getPartition = partitioner;\n}\nutil.inherits(CustomPartitioner, Partitioner);\n\nmodule.exports.DefaultPartitioner = DefaultPartitioner;\nmodule.exports.CyclicPartitioner = CyclicPartitioner;\nmodule.exports.RandomPartitioner = RandomPartitioner;\nmodule.exports.KeyedPartitioner = KeyedPartitioner;\nmodule.exports.CustomPartitioner = CustomPartitioner;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}