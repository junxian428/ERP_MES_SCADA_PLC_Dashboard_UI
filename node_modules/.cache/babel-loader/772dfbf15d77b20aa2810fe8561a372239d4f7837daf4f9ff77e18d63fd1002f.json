{"ast":null,"code":"'use strict';\n\nrequire(\"core-js/modules/es.array.push.js\");\nconst logger = require('../logging')('kafka-node:Range');\nconst VERSION = 0;\nconst _ = require('lodash');\nconst groupPartitionsByTopic = require('../utils').groupPartitionsByTopic;\nfunction assignRange(topicPartition, groupMembers, callback) {\n  logger.debug('topicPartition: %j', topicPartition);\n  var assignment = _(groupMembers).map('id').reduce(function (obj, id) {\n    obj[id] = [];\n    return obj;\n  }, {});\n  const topicMemberMap = topicToMemberMap(groupMembers);\n  for (var topic in topicMemberMap) {\n    if (!topicMemberMap.hasOwnProperty(topic)) {\n      continue;\n    }\n    logger.debug('For topic %s', topic);\n    topicMemberMap[topic].sort();\n    logger.debug('   members: ', topicMemberMap[topic]);\n    var numberOfPartitionsForTopic = topicPartition[topic].length;\n    logger.debug('   numberOfPartitionsForTopic', numberOfPartitionsForTopic);\n    var numberOfMembersForTopic = topicMemberMap[topic].length;\n    logger.debug('   numberOfMembersForTopic', numberOfMembersForTopic);\n    var numberPartitionsPerMember = Math.floor(numberOfPartitionsForTopic / numberOfMembersForTopic);\n    logger.debug('   numberPartitionsPerMember', numberPartitionsPerMember);\n    var membersWithExtraPartition = numberOfPartitionsForTopic % numberOfMembersForTopic;\n    var topicPartitionList = createTopicPartitionArray(topic, numberOfPartitionsForTopic);\n    for (var i = 0, n = numberOfMembersForTopic; i < n; i++) {\n      var start = numberPartitionsPerMember * i + Math.min(i, membersWithExtraPartition);\n      var length = numberPartitionsPerMember + (i + 1 > membersWithExtraPartition ? 0 : 1);\n      var assignedTopicPartitions = assignment[topicMemberMap[topic][i]];\n      assignedTopicPartitions.push.apply(assignedTopicPartitions, topicPartitionList.slice(start, start + length));\n    }\n  }\n  logger.debug(assignment);\n  callback(null, convertToAssignmentList(assignment, VERSION));\n}\nfunction convertToAssignmentList(assignment, version) {\n  return _.map(assignment, function (value, key) {\n    return {\n      memberId: key,\n      topicPartitions: groupPartitionsByTopic(value),\n      version: version\n    };\n  });\n}\nfunction createTopicPartitionArray(topic, numberOfPartitions) {\n  return _.times(numberOfPartitions, function (n) {\n    return {\n      topic: topic,\n      partition: n\n    };\n  });\n}\nfunction topicToMemberMap(groupMembers) {\n  return groupMembers.reduce(function (result, member) {\n    member.subscription.forEach(function (topic) {\n      if (topic in result) {\n        result[topic].push(member.id);\n      } else {\n        result[topic] = [member.id];\n      }\n    });\n    return result;\n  }, {});\n}\nmodule.exports = {\n  assign: assignRange,\n  name: 'range',\n  version: VERSION\n};","map":{"version":3,"names":["require","logger","VERSION","_","groupPartitionsByTopic","assignRange","topicPartition","groupMembers","callback","debug","assignment","map","reduce","obj","id","topicMemberMap","topicToMemberMap","topic","hasOwnProperty","sort","numberOfPartitionsForTopic","length","numberOfMembersForTopic","numberPartitionsPerMember","Math","floor","membersWithExtraPartition","topicPartitionList","createTopicPartitionArray","i","n","start","min","assignedTopicPartitions","push","apply","slice","convertToAssignmentList","version","value","key","memberId","topicPartitions","numberOfPartitions","times","partition","result","member","subscription","forEach","module","exports","assign","name"],"sources":["D:/Project/VUEJSSPRING_CRUD_JWT/vue-crud-api-jwt-vuex/node_modules/kafka-node/lib/assignment/range.js"],"sourcesContent":["'use strict';\n\nconst logger = require('../logging')('kafka-node:Range');\nconst VERSION = 0;\nconst _ = require('lodash');\nconst groupPartitionsByTopic = require('../utils').groupPartitionsByTopic;\n\nfunction assignRange (topicPartition, groupMembers, callback) {\n  logger.debug('topicPartition: %j', topicPartition);\n  var assignment = _(groupMembers).map('id').reduce(function (obj, id) {\n    obj[id] = [];\n    return obj;\n  }, {});\n\n  const topicMemberMap = topicToMemberMap(groupMembers);\n  for (var topic in topicMemberMap) {\n    if (!topicMemberMap.hasOwnProperty(topic)) {\n      continue;\n    }\n    logger.debug('For topic %s', topic);\n    topicMemberMap[topic].sort();\n    logger.debug('   members: ', topicMemberMap[topic]);\n\n    var numberOfPartitionsForTopic = topicPartition[topic].length;\n    logger.debug('   numberOfPartitionsForTopic', numberOfPartitionsForTopic);\n\n    var numberOfMembersForTopic = topicMemberMap[topic].length;\n    logger.debug('   numberOfMembersForTopic', numberOfMembersForTopic);\n\n    var numberPartitionsPerMember = Math.floor(numberOfPartitionsForTopic / numberOfMembersForTopic);\n    logger.debug('   numberPartitionsPerMember', numberPartitionsPerMember);\n\n    var membersWithExtraPartition = numberOfPartitionsForTopic % numberOfMembersForTopic;\n    var topicPartitionList = createTopicPartitionArray(topic, numberOfPartitionsForTopic);\n\n    for (var i = 0, n = numberOfMembersForTopic; i < n; i++) {\n      var start = numberPartitionsPerMember * i + Math.min(i, membersWithExtraPartition);\n      var length = numberPartitionsPerMember + (i + 1 > membersWithExtraPartition ? 0 : 1);\n      var assignedTopicPartitions = assignment[topicMemberMap[topic][i]];\n      assignedTopicPartitions.push.apply(assignedTopicPartitions, topicPartitionList.slice(start, start + length));\n    }\n  }\n\n  logger.debug(assignment);\n\n  callback(null, convertToAssignmentList(assignment, VERSION));\n}\n\nfunction convertToAssignmentList (assignment, version) {\n  return _.map(assignment, function (value, key) {\n    return {\n      memberId: key,\n      topicPartitions: groupPartitionsByTopic(value),\n      version: version\n    };\n  });\n}\n\nfunction createTopicPartitionArray (topic, numberOfPartitions) {\n  return _.times(numberOfPartitions, function (n) {\n    return {\n      topic: topic,\n      partition: n\n    };\n  });\n}\n\nfunction topicToMemberMap (groupMembers) {\n  return groupMembers.reduce(function (result, member) {\n    member.subscription.forEach(function (topic) {\n      if (topic in result) {\n        result[topic].push(member.id);\n      } else {\n        result[topic] = [member.id];\n      }\n    });\n    return result;\n  }, {});\n}\n\nmodule.exports = {\n  assign: assignRange,\n  name: 'range',\n  version: VERSION\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}