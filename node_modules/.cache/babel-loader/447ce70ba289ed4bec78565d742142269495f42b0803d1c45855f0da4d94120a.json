{"ast":null,"code":"'use strict';\n\nrequire(\"core-js/modules/es.array.push.js\");\nvar Binary = require('binary');\nvar Buffermaker = require('buffermaker');\nvar _ = require('lodash');\nvar crc32 = require('buffer-crc32');\nvar protocol = require('./protocol_struct');\nvar getCodec = require('../codec');\nvar REQUEST_TYPE = protocol.REQUEST_TYPE;\nvar ERROR_CODE = protocol.ERROR_CODE;\nvar GROUP_ERROR = protocol.GROUP_ERROR;\nvar PartitionMetadata = protocol.PartitionMetadata;\nconst API_KEY_TO_NAME = _.invert(REQUEST_TYPE);\nconst MessageSizeTooLarge = require('../errors/MessageSizeTooLargeError');\nconst SaslAuthenticationError = require('../errors/SaslAuthenticationError');\nconst InvalidRequestError = require('../errors/InvalidRequestError');\nconst async = require('async');\nvar API_VERSION = 0;\nvar REPLICA_ID = -1;\nvar GROUPS_PROTOCOL_TYPE = 'consumer';\nfunction groupByTopic(payloads) {\n  return payloads.reduce(function (out, p) {\n    out[p.topic] = out[p.topic] || {};\n    out[p.topic][p.partition] = p;\n    return out;\n  }, {});\n}\nfunction encodeRequestWithLength(request) {\n  return new Buffermaker().Int32BE(request.length).string(request).make();\n}\nfunction encodeRequestHeader(clientId, correlationId, apiKey, apiVersion) {\n  return new Buffermaker().Int16BE(apiKey).Int16BE(apiVersion || API_VERSION).Int32BE(correlationId).Int16BE(clientId.length).string(clientId);\n}\nfunction encodeSaslHandshakeRequest(clientId, correlationId, apiVersion, mechanism) {\n  var request = encodeRequestHeader(clientId, correlationId, REQUEST_TYPE.saslHandshake, apiVersion);\n  request.Int16BE(mechanism.length).string(mechanism.toUpperCase());\n  return encodeRequestWithLength(request.make());\n}\nfunction decodeSaslHandshakeResponse(resp) {\n  var mechanisms = [];\n  var errorCode = null;\n  Binary.parse(resp).word32bs('size').word32bs('correlationId').word16bs('errorCode').tap(function (vars) {\n    errorCode = vars.errorCode;\n  }).word32bs('numMechanisms').loop(_decodeMechanisms);\n  function _decodeMechanisms(end, vars) {\n    if (vars.numMechanisms-- === 0) {\n      return end();\n    }\n    this.word16be('mechanismSize').tap(function (vars) {\n      this.buffer('mechanism', vars.mechanismSize);\n      mechanisms.push(vars.mechanism);\n    });\n  }\n  if (errorCode == null || errorCode === 0) {\n    return mechanisms;\n  }\n  return new SaslAuthenticationError(errorCode, 'Handshake failed.');\n}\nfunction encodeSaslAuthenticateRequest(clientId, correlationId, apiVersion, saslOpts) {\n  //\n  // FIXME From the Kafka protocol docs:\n  //       If SaslHandshakeRequest version is v0, a series of SASL client and server tokens\n  //       corresponding to the mechanism are sent as opaque packets without wrapping the\n  //       messages with Kafka protocol headers. If SaslHandshakeRequest version is v1, the\n  //       SaslAuthenticate request/response are used, where the actual SASL tokens are\n  //       wrapped in the Kafka protocol.\n  //\n  var username = saslOpts.username || '';\n  var password = saslOpts.password || '';\n  var authBytes = null;\n  if (saslOpts.mechanism.toUpperCase() === 'PLAIN') {\n    authBytes = new Buffermaker().string(username).Int8(0).string(username).Int8(0).string(password).make();\n  } else {\n    return new Error('unsupported SASL auth type: ' + saslOpts.mechanism.toUpperCase());\n  }\n  if (apiVersion === 0) {\n    return encodeRequestWithLength(authBytes);\n  }\n  var request = encodeRequestHeader(clientId, correlationId, REQUEST_TYPE.saslAuthenticate, 0);\n  request.Int32BE(authBytes.length).string(authBytes);\n  return encodeRequestWithLength(request.make());\n}\nfunction decodeSaslAuthenticateResponse(resp) {\n  var errorCode = null;\n  var errorMessage = null;\n  var authBytes = null;\n  Binary.parse(resp).word32bs('size').word32bs('correlationId').word16bs('errorCode').word16bs('errorMessageLength').tap(function (vars) {\n    errorCode = vars.errorCode;\n    this.buffer('errorMessage', vars.errorMessageLength);\n    errorMessage = vars.errorMessage.toString();\n  }).word32bs('authBytesLength').tap(function (vars) {\n    this.buffer('authBytes', vars.authBytesLength);\n    authBytes = vars.authBytes.toString();\n  });\n  if (errorCode == null || errorCode === 0) {\n    return authBytes;\n  }\n  return new SaslAuthenticationError(errorCode, errorMessage);\n}\nfunction encodeFetchRequest(maxWaitMs, minBytes) {\n  return function encodeFetchRequest(clientId, correlationId, payloads) {\n    return _encodeFetchRequest(clientId, correlationId, payloads, maxWaitMs, minBytes);\n  };\n}\nfunction encodeFetchRequestV1(maxWaitMs, minBytes) {\n  return function encodeFetchRequest(clientId, correlationId, payloads) {\n    return _encodeFetchRequest(clientId, correlationId, payloads, maxWaitMs, minBytes, 1);\n  };\n}\nfunction encodeFetchRequestV2(maxWaitMs, minBytes) {\n  return function encodeFetchRequest(clientId, correlationId, payloads) {\n    return _encodeFetchRequest(clientId, correlationId, payloads, maxWaitMs, minBytes, 2);\n  };\n}\nfunction decodeTopics(decodePartitions) {\n  return function (end, vars) {\n    if (--vars.topicNum === 0) end();\n    this.word16bs('topic').tap(function (vars) {\n      this.buffer('topic', vars.topic);\n      vars.topic = vars.topic.toString();\n    }).word32bs('partitionNum').loop(decodePartitions);\n  };\n}\nfunction _encodeFetchRequest(clientId, correlationId, payloads, maxWaitMs, minBytes, version) {\n  payloads = groupByTopic(payloads);\n  var request = encodeRequestHeader(clientId, correlationId, REQUEST_TYPE.fetch, version);\n  var topics = Object.keys(payloads);\n  request.Int32BE(REPLICA_ID).Int32BE(maxWaitMs).Int32BE(minBytes).Int32BE(topics.length);\n  topics.forEach(function (topic) {\n    request.Int16BE(topic.length).string(topic);\n    var partitions = _.toPairs(payloads[topic]).map(function (pairs) {\n      return pairs[1];\n    });\n    request.Int32BE(partitions.length);\n    partitions.forEach(function (p) {\n      request.Int32BE(p.partition).Int64BE(p.offset).Int32BE(p.maxBytes);\n    });\n  });\n  return encodeRequestWithLength(request.make());\n}\nfunction decodeFetchResponse(cb, maxTickMessages) {\n  return function (resp) {\n    return _decodeFetchResponse(resp, cb, maxTickMessages, 0);\n  };\n}\nfunction decodeFetchResponseV1(cb, maxTickMessages) {\n  return function (resp) {\n    return _decodeFetchResponse(resp, cb, maxTickMessages, 1);\n  };\n}\nfunction createGroupError(errorCode) {\n  if (errorCode == null || errorCode === 0) {\n    return null;\n  }\n  var error = ERROR_CODE[errorCode];\n  if (error in GROUP_ERROR) {\n    error = new GROUP_ERROR[error]('Kafka Error Code: ' + errorCode);\n  } else {\n    error = new Error(error);\n  }\n  error.errorCode = errorCode;\n  return error;\n}\nfunction _decodeFetchResponse(resp, cb, maxTickMessages, version) {\n  if (!cb) {\n    throw new Error('Missing callback');\n  }\n  var topics = {};\n  var events = [];\n  let eventCount = 0;\n  cb(null, 'processingfetch');\n  Binary.parse(resp).word32bs('size').word32bs('correlationId').tap(function () {\n    if (version >= 1) {\n      this.word32bs('throttleTime');\n    }\n  }).word32bs('topicNum').loop(decodeTopics(decodePartitions));\n\n  // Parsing is all sync, but emitting events is async due to compression\n  // At this point, the enqueue chain should be populated in order, and at\n  // the end, the 'topics' map above should be fully populated.\n  // topics is not ready for use until all events are processed, as an async\n  // decompression may add more offsets to the topic map.\n  async.series(events, err => {\n    if (err) {\n      cb(err);\n    }\n    cb(null, 'done', topics);\n  });\n  function decodePartitions(end, vars) {\n    if (--vars.partitionNum === 0) end();\n    topics[vars.topic] = topics[vars.topic] || {};\n    let hadError = false;\n    this.word32bs('partition').word16bs('errorCode').word64bs('highWaterOffset').word32bs('messageSetSize').tap(function (vars) {\n      this.buffer('messageSet', vars.messageSetSize);\n      const errorCode = vars.errorCode;\n      const topic = vars.topic;\n      const partition = vars.partition;\n      if (errorCode !== 0) {\n        return events.push(next => {\n          const err = new Error(ERROR_CODE[errorCode]);\n          err.topic = topic;\n          err.partition = partition;\n          cb(err);\n          next();\n        });\n      }\n      const highWaterOffset = vars.highWaterOffset;\n      const {\n        magicByte\n      } = Binary.parse(vars.messageSet).skip(16).word8bs('magicByte').vars;\n      if (magicByte != null && magicByte > 1) {\n        return events.push(next => {\n          const err = new Error('Not a message set. Magic byte is ' + magicByte);\n          err.topic = topic;\n          err.partition = partition;\n          cb(err);\n          next();\n        });\n      }\n      decodeMessageSet(topic, partition, vars.messageSet, enqueuedTask => {\n        events.push(enqueuedTask);\n        if (maxTickMessages && ++eventCount >= maxTickMessages) {\n          eventCount = 0;\n          events.push(next => process.nextTick(next));\n        }\n      }, (err, data) => {\n        if (err) {\n          hadError = true;\n        } else if (hadError) {\n          return; // Once we've had an error on this partition, don't emit any more messages\n        }\n\n        if (!err && data) {\n          topics[topic][partition] = data.offset;\n          cb(null, 'message', data);\n        } else {\n          cb(err);\n        }\n      }, highWaterOffset, topics);\n    });\n  }\n}\nfunction decodeMessageSet(topic, partition, messageSet, enqueue, emit, highWaterOffset, topics, lastOffset) {\n  const messageSetSize = messageSet.length;\n  // TODO: this is broken logic. It overwrites previous partitions HWO.\n  // Need to refactor this on next major API bump\n  topics[topic].highWaterOffset = highWaterOffset;\n  let innerMessages = [];\n  while (messageSet.length > 0) {\n    var cur = 8 + 4 + 4 + 1 + 1 + 4 + 4;\n    var partial = false;\n    Binary.parse(messageSet).word64bs('offset').word32bs('messageSize').tap(function (vars) {\n      if (vars.messageSize > messageSet.length - 12) {\n        partial = true;\n      }\n    }).word32bs('crc').word8bs('magicByte').word8bs('attributes').tap(function (vars) {\n      if (vars.magicByte > 0) {\n        this.word64bs('timestamp');\n        cur += 8;\n      }\n    }).word32bs('key').tap(function (vars) {\n      if (vars.key === -1) {\n        vars.key = null;\n        return;\n      }\n      cur += vars.key;\n      this.buffer('key', vars.key);\n    }).word32bs('value').tap(function (vars) {\n      if (vars.value !== -1) {\n        cur += vars.value;\n        this.buffer('value', vars.value);\n      } else {\n        vars.value = null;\n      }\n      if (vars.attributes === 0 && vars.messageSize > messageSetSize) {\n        const offset = vars.offset;\n        return enqueue(next => {\n          emit(new MessageSizeTooLarge({\n            topic: topic,\n            offset: offset,\n            partition: partition\n          }));\n          next(null);\n        });\n      }\n      if (!partial && vars.offset !== null) {\n        const offset = vars.offset;\n        const value = vars.value;\n        const key = vars.key;\n        const magicByte = vars.magicByte;\n        var codec = getCodec(vars.attributes);\n        if (!codec) {\n          const message = {\n            topic: topic,\n            value: value,\n            offset: offset,\n            partition: partition,\n            highWaterOffset: highWaterOffset,\n            key: key\n          };\n          if (vars.timestamp) {\n            message.timestamp = new Date(vars.timestamp);\n          }\n          if (lastOffset != null) {\n            // need to fix offset skipping enqueue till later\n            innerMessages.push(message);\n            return;\n          }\n          enqueue(next => {\n            emit(null, message);\n            next(null);\n          });\n          return;\n        }\n        enqueue(next => {\n          codec.decode(value, function (error, inlineMessageSet) {\n            if (error) {\n              emit(error);\n              next(null);\n              return;\n            }\n            decodeMessageSet(topic, partition, inlineMessageSet, cb => {\n              cb(_.noop);\n            }, emit, highWaterOffset, topics, magicByte === 1 ? offset : null);\n\n            // Delay 1 tick as this isn't counted to max tick messages, give a breather\n            process.nextTick(() => next(null));\n          });\n        });\n      }\n    });\n    // Skip decoding binary left in the message set if partial message detected\n    if (partial) break;\n    messageSet = messageSet.slice(cur);\n  }\n  if (lastOffset != null && innerMessages.length) {\n    // contains inner messages, need to fix up offsets\n    let len = innerMessages.length - 1;\n    for (const message of innerMessages) {\n      const offset = lastOffset - len--;\n      message.offset = offset;\n      enqueue(next => {\n        emit(null, message);\n        next(null);\n      });\n    }\n  }\n}\nfunction encodeMetadataRequest(clientId, correlationId, topics) {\n  return _encodeMetadataRequest(clientId, correlationId, topics, 0);\n}\nfunction decodeMetadataResponse(resp) {\n  return _decodeMetadataResponse(resp, 0);\n}\nfunction encodeMetadataV1Request(clientId, correlationId, topics) {\n  return _encodeMetadataRequest(clientId, correlationId, topics, 1);\n}\nfunction decodeMetadataV1Response(resp) {\n  return _decodeMetadataResponse(resp, 1);\n}\nfunction _encodeMetadataRequest(clientId, correlationId, topics, version) {\n  var request = encodeRequestHeader(clientId, correlationId, REQUEST_TYPE.metadata, version);\n\n  // In version 0 an empty array will fetch all topics.\n  // In version 1+ a null value (-1) will fetch all topics. An empty array returns no topics.\n  // This adds support for maintaining version 0 behaviour in client regardless of kafka version ([] = fetch all topics).\n  if (version > 0 && (Array.isArray(topics) && topics.length === 0 || topics === null)) {\n    request.Int32BE(-1);\n    return encodeRequestWithLength(request.make());\n  }\n\n  // Handle case where null is provided but version requested was 0 (not supported).\n  // Can happen if the api versions requests fails and fallback api support is used.\n  if (version === 0 && topics === null) {\n    topics = [];\n  }\n  request.Int32BE(topics.length);\n  topics.forEach(function (topic) {\n    request.Int16BE(topic.length).string(topic);\n  });\n  return encodeRequestWithLength(request.make());\n}\nfunction _decodeMetadataResponse(resp, version) {\n  var brokers = {};\n  var out = {};\n  var topics = {};\n  var controllerId = -1;\n  var errors = [];\n  Binary.parse(resp).word32bs('size').word32bs('correlationId').word32bs('brokerNum').loop(decodeBrokers).tap(function (vars) {\n    if (version < 1) {\n      return;\n    }\n    this.word32bs('controllerId');\n    controllerId = vars.controllerId;\n  }).word32bs('topicNum').loop(_decodeTopics);\n  function decodeBrokers(end, vars) {\n    if (vars.brokerNum-- === 0) return end();\n    this.word32bs('nodeId').word16bs('host').tap(function (vars) {\n      this.buffer('host', vars.host);\n      vars.host = vars.host.toString();\n    }).word32bs('port').tap(function (vars) {\n      if (version < 1) {\n        return;\n      }\n      this.word16bs('rack');\n      if (vars.rack === -1) {\n        vars.rack = '';\n      } else {\n        this.buffer('rack', vars.rack);\n        vars.rack = vars.rack.toString();\n      }\n    }).tap(function (vars) {\n      brokers[vars.nodeId] = {\n        nodeId: vars.nodeId,\n        host: vars.host,\n        port: vars.port\n      };\n    });\n  }\n  function _decodeTopics(end, vars) {\n    if (vars.topicNum-- === 0) return end();\n    this.word16bs('topicError').word16bs('topic').tap(function (vars) {\n      this.buffer('topic', vars.topic);\n      vars.topic = vars.topic.toString();\n      if (version < 1) {\n        return;\n      }\n      this.word8bs('isInternal');\n    }).word32bs('partitionNum').tap(function (vars) {\n      if (vars.topicError !== 0) {\n        return errors.push(ERROR_CODE[vars.topicError]);\n      }\n      this.loop(decodePartitions);\n    });\n  }\n  function decodePartitions(end, vars) {\n    if (vars.partitionNum-- === 0) return end();\n    topics[vars.topic] = topics[vars.topic] || {};\n    this.word16bs('errorCode').word32bs('partition').word32bs('leader').word32bs('replicasNum').tap(function (vars) {\n      var buffer = this.buffer('replicas', vars.replicasNum * 4).vars.replicas;\n      this.vars.replicas = bufferToArray(vars.replicasNum, buffer);\n    }).word32bs('isrNum').tap(function (vars) {\n      var buffer = this.buffer('isr', vars.isrNum * 4).vars.isr;\n      this.vars.isr = bufferToArray(vars.isrNum, buffer);\n      if (vars.errorCode === 0 || vars.errorCode === 9) {\n        topics[vars.topic][vars.partition] = new PartitionMetadata(vars.topic, vars.partition, vars.leader, vars.replicas, vars.isr);\n      } else {\n        errors.push(ERROR_CODE[vars.errorCode]);\n      }\n    });\n  }\n  if (!_.isEmpty(errors)) out.error = errors;\n  out.metadata = topics;\n  if (version > 0) {\n    out.clusterMetadata = {\n      controllerId\n    };\n  }\n  return [brokers, out];\n}\nfunction encodeCreateTopicRequest(clientId, correlationId, topics, timeoutMs) {\n  return _encodeCreateTopicRequest(clientId, correlationId, topics, timeoutMs, 0);\n}\nfunction encodeCreateTopicRequestV1(clientId, correlationId, topics, timeoutMs) {\n  return _encodeCreateTopicRequest(clientId, correlationId, topics, timeoutMs, 1);\n}\nfunction _encodeCreateTopicRequest(clientId, correlationId, topics, timeoutMs, version) {\n  var request = encodeRequestHeader(clientId, correlationId, REQUEST_TYPE.createTopics, version);\n  request.Int32BE(topics.length);\n  topics.forEach(function (topic) {\n    request.Int16BE(topic.topic.length).string(topic.topic);\n\n    // When replica assignment is used, partitions and replication factor must be unset (-1)\n    if (topic.replicaAssignment) {\n      request.Int32BE(-1);\n      request.Int16BE(-1);\n    } else {\n      request.Int32BE(topic.partitions);\n      request.Int16BE(topic.replicationFactor);\n    }\n    if (topic.replicaAssignment) {\n      request.Int32BE(topic.replicaAssignment.length);\n      topic.replicaAssignment.forEach(function (replicaAssignment) {\n        request.Int32BE(replicaAssignment.partition);\n        request.Int32BE(replicaAssignment.replicas.length);\n        replicaAssignment.replicas.forEach(function (replica) {\n          request.Int32BE(replica);\n        });\n      });\n    } else {\n      request.Int32BE(0);\n    }\n    if (topic.configEntries) {\n      request.Int32BE(topic.configEntries.length);\n      topic.configEntries.forEach(function (config) {\n        request.Int16BE(config.name.length).string(config.name);\n        if (config.value == null) {\n          request.Int16BE(-1);\n        } else {\n          request.Int16BE(config.value.length).string(config.value);\n        }\n      });\n    } else {\n      request.Int32BE(0);\n    }\n  });\n  request.Int32BE(timeoutMs);\n\n  // Validate only is 1+\n  if (version > 0) {\n    request.Int8(0);\n  }\n  return encodeRequestWithLength(request.make());\n}\nfunction decodeCreateTopicResponse(resp) {\n  return _decodeCreateTopicResponse(resp, 0);\n}\nfunction decodeCreateTopicResponseV1(resp) {\n  return _decodeCreateTopicResponse(resp, 1);\n}\nfunction _decodeCreateTopicResponse(resp, version) {\n  var topicErrorResponses = [];\n  var error;\n  Binary.parse(resp).word32bs('size').word32bs('correlationId').word32bs('topicNum').loop(decodeTopics);\n  function decodeTopics(end, vars) {\n    if (vars.topicNum-- === 0) return end();\n    this.word16bs('topic').tap(function (vars) {\n      this.buffer('topic', vars.topic);\n      vars.topic = vars.topic.toString();\n    }).word16bs('errorCode').tap(function (vars) {\n      if (version > 0) {\n        this.word16bs('errorMessage');\n        if (vars.errorMessage !== -1) {\n          this.buffer('errorMessage', vars.errorMessage);\n          vars.errorMessage = vars.errorMessage.toString();\n        }\n      }\n      if (vars.errorCode === 0) {\n        return;\n      }\n\n      // Errors that are not related to the actual topic(s) but the entire request\n      // (like timeout and sending the request to a non-controller)\n      if (vars.errorCode === 7 || vars.errorCode === 41) {\n        error = createGroupError(vars.errorCode);\n        return;\n      }\n      if (version > 0) {\n        topicErrorResponses.push({\n          topic: vars.topic,\n          error: vars.errorMessage\n        });\n      } else {\n        topicErrorResponses.push({\n          topic: vars.topic,\n          error: 'received error code ' + vars.errorCode + ' for topic'\n        });\n      }\n    });\n  }\n  return error || topicErrorResponses;\n}\nfunction bufferToArray(num, buffer) {\n  var ret = [];\n  for (var i = 0; i < num; i++) {\n    ret.push(Binary.parse(buffer).word32bs('r').vars.r);\n    buffer = buffer.slice(4);\n  }\n  return ret;\n}\nfunction encodeOffsetCommitRequest(group) {\n  return function (clientId, correlationId, payloads) {\n    return _encodeOffsetCommitRequest(clientId, correlationId, group, payloads);\n  };\n}\nfunction encodeOffsetCommitV2Request(clientId, correlationId, group, generationId, memberId, payloads) {\n  return encodeOffsetCommitGenericRequest(clientId, correlationId, group, generationId, memberId, payloads, 2);\n}\nfunction encodeOffsetCommitV1Request(clientId, correlationId, group, generationId, memberId, payloads) {\n  return encodeOffsetCommitGenericRequest(clientId, correlationId, group, generationId, memberId, payloads, 1);\n}\nfunction encodeOffsetCommitGenericRequest(clientId, correlationId, group, generationId, memberId, payloads, apiVersion) {\n  payloads = groupByTopic(payloads);\n  var request = encodeRequestHeader(clientId, correlationId, REQUEST_TYPE.offsetCommit, apiVersion);\n  var topics = Object.keys(payloads);\n  request.Int16BE(group.length).string(group).Int32BE(generationId).Int16BE(memberId.length).string(memberId).Int64BE(-1).Int32BE(topics.length);\n  topics.forEach(function (topic) {\n    request.Int16BE(topic.length).string(topic);\n    var partitions = _.toPairs(payloads[topic]).map(function (pairs) {\n      return pairs[1];\n    });\n    request.Int32BE(partitions.length);\n    partitions.forEach(function (p) {\n      request.Int32BE(p.partition).Int64BE(p.offset).Int16BE(p.metadata.length).string(p.metadata);\n    });\n  });\n  return encodeRequestWithLength(request.make());\n}\nfunction _encodeOffsetCommitRequest(clientId, correlationId, group, payloads) {\n  payloads = groupByTopic(payloads);\n  var request = encodeRequestHeader(clientId, correlationId, REQUEST_TYPE.offsetCommit);\n  var topics = Object.keys(payloads);\n  request.Int16BE(group.length).string(group).Int32BE(topics.length);\n  topics.forEach(function (topic) {\n    request.Int16BE(topic.length).string(topic);\n    var partitions = _.toPairs(payloads[topic]).map(function (pairs) {\n      return pairs[1];\n    });\n    request.Int32BE(partitions.length);\n    partitions.forEach(function (p) {\n      request.Int32BE(p.partition).Int64BE(p.offset).Int16BE(p.metadata.length).string(p.metadata);\n    });\n  });\n  return encodeRequestWithLength(request.make());\n}\nfunction decodeOffsetCommitResponse(resp) {\n  var topics = {};\n  Binary.parse(resp).word32bs('size').word32bs('correlationId').word32bs('topicNum').loop(decodeTopics(decodePartitions));\n  function decodePartitions(end, vars) {\n    if (--vars.partitionNum === 0) end();\n    topics[vars.topic] = topics[vars.topic] || {};\n    this.word32bs('partition').word16bs('errorcode').tap(function (vars) {\n      topics[vars.topic]['partition'] = vars.partition;\n      topics[vars.topic]['errorCode'] = vars.errorcode;\n    });\n  }\n  return topics;\n}\nfunction encodeProduceRequest(requireAcks, ackTimeoutMs) {\n  return function (clientId, correlationId, payloads) {\n    return _encodeProduceRequest(clientId, correlationId, payloads, requireAcks, ackTimeoutMs, 0);\n  };\n}\nfunction encodeProduceV1Request(requireAcks, ackTimeoutMs) {\n  return function (clientId, correlationId, payloads) {\n    return _encodeProduceRequest(clientId, correlationId, payloads, requireAcks, ackTimeoutMs, 1);\n  };\n}\nfunction encodeProduceV2Request(requireAcks, ackTimeoutMs) {\n  return function (clientId, correlationId, payloads) {\n    return _encodeProduceRequest(clientId, correlationId, payloads, requireAcks, ackTimeoutMs, 2);\n  };\n}\nfunction _encodeProduceRequest(clientId, correlationId, payloads, requireAcks, ackTimeoutMs, apiVersion) {\n  payloads = groupByTopic(payloads);\n  var request = encodeRequestHeader(clientId, correlationId, REQUEST_TYPE.produce, apiVersion);\n  var topics = Object.keys(payloads);\n  request.Int16BE(requireAcks).Int32BE(ackTimeoutMs).Int32BE(topics.length);\n  topics.forEach(function (topic) {\n    request.Int16BE(topic.length).string(topic);\n    var reqs = _.toPairs(payloads[topic]).map(function (pairs) {\n      return pairs[1];\n    });\n    request.Int32BE(reqs.length);\n    reqs.forEach(function (p) {\n      var messageSet = encodeMessageSet(p.messages, apiVersion === 2 ? 1 : 0);\n      request.Int32BE(p.partition).Int32BE(messageSet.length).string(messageSet);\n    });\n  });\n  return encodeRequestWithLength(request.make());\n}\nfunction encodeMessageSet(messageSet, magic) {\n  var buffer = new Buffermaker();\n  messageSet.forEach(function (message) {\n    var msg = encodeMessage(message, magic);\n    buffer.Int64BE(0).Int32BE(msg.length).string(msg);\n  });\n  return buffer.make();\n}\nfunction encodeMessage(message, magic) {\n  if (magic == null) {\n    magic = 0;\n  }\n  var m = new Buffermaker().Int8(magic).Int8(message.attributes);\n\n  // Add timestamp support for new messages\n  if (magic === 1) {\n    m.Int64BE(message.timestamp);\n  }\n  var key = message.key;\n  setValueOnBuffer(m, key);\n  var value = message.value;\n  setValueOnBuffer(m, value);\n  m = m.make();\n  var crc = crc32.signed(m);\n  return new Buffermaker().Int32BE(crc).string(m).make();\n}\nfunction setValueOnBuffer(buffer, value) {\n  if (value != null) {\n    if (Buffer.isBuffer(value)) {\n      buffer.Int32BE(value.length);\n    } else {\n      if (typeof value !== 'string') value = value.toString();\n      buffer.Int32BE(Buffer.byteLength(value));\n    }\n    buffer.string(value);\n  } else {\n    buffer.Int32BE(-1);\n  }\n}\nfunction decodeProduceV1Response(resp) {\n  var topics = {};\n  var error;\n  Binary.parse(resp).word32bs('size').word32bs('correlationId').word32bs('topicNum').loop(decodeTopics(decodePartitions)).word32bs('throttleTime');\n  function decodePartitions(end, vars) {\n    if (--vars.partitionNum === 0) end();\n    topics[vars.topic] = topics[vars.topic] || {};\n    this.word32bs('partition').word16bs('errorCode').word64bs('offset').tap(function (vars) {\n      if (vars.errorCode) {\n        error = new Error(ERROR_CODE[vars.errorCode]);\n      } else {\n        topics[vars.topic][vars.partition] = vars.offset;\n      }\n    });\n  }\n  return error || topics;\n}\nfunction decodeProduceV2Response(resp) {\n  var topics = {};\n  var error;\n  Binary.parse(resp).word32bs('size').word32bs('correlationId').word32bs('topicNum').loop(decodeTopics(decodePartitions)).word32bs('throttleTime');\n  function decodePartitions(end, vars) {\n    if (--vars.partitionNum === 0) end();\n    topics[vars.topic] = topics[vars.topic] || {};\n    this.word32bs('partition').word16bs('errorCode').word64bs('offset').word64bs('timestamp').tap(function (vars) {\n      if (vars.errorCode) {\n        error = new Error(ERROR_CODE[vars.errorCode]);\n      } else {\n        topics[vars.topic][vars.partition] = vars.offset;\n      }\n    });\n  }\n  return error || topics;\n}\nfunction decodeProduceResponse(resp) {\n  var topics = {};\n  var error;\n  Binary.parse(resp).word32bs('size').word32bs('correlationId').word32bs('topicNum').loop(decodeTopics(decodePartitions));\n  function decodePartitions(end, vars) {\n    if (--vars.partitionNum === 0) end();\n    topics[vars.topic] = topics[vars.topic] || {};\n    this.word32bs('partition').word16bs('errorCode').word64bs('offset').tap(function (vars) {\n      if (vars.errorCode) {\n        error = new Error(ERROR_CODE[vars.errorCode]);\n      } else {\n        topics[vars.topic][vars.partition] = vars.offset;\n      }\n    });\n  }\n  return error || topics;\n}\nfunction encodeOffsetFetchRequest(group) {\n  return function (clientId, correlationId, payloads) {\n    return _encodeOffsetFetchRequest(clientId, correlationId, group, payloads);\n  };\n}\nfunction encodeOffsetFetchV1Request(clientId, correlationId, group, payloads) {\n  var request = encodeRequestHeader(clientId, correlationId, REQUEST_TYPE.offsetFetch, 1);\n  var topics = Object.keys(payloads);\n  request.Int16BE(group.length).string(group).Int32BE(topics.length);\n  topics.forEach(function (topic) {\n    request.Int16BE(topic.length).string(topic).Int32BE(payloads[topic].length);\n    payloads[topic].forEach(function (p) {\n      request.Int32BE(p);\n    });\n  });\n  return encodeRequestWithLength(request.make());\n}\nfunction _encodeOffsetFetchRequest(clientId, correlationId, group, payloads) {\n  payloads = groupByTopic(payloads);\n  var request = encodeRequestHeader(clientId, correlationId, REQUEST_TYPE.offsetFetch);\n  var topics = Object.keys(payloads);\n  request.Int16BE(group.length).string(group).Int32BE(topics.length);\n  topics.forEach(function (topic) {\n    request.Int16BE(topic.length).string(topic);\n    var partitions = _.toPairs(payloads[topic]).map(function (pairs) {\n      return pairs[1];\n    });\n    request.Int32BE(partitions.length);\n    partitions.forEach(function (p) {\n      request.Int32BE(p.partition);\n    });\n  });\n  return encodeRequestWithLength(request.make());\n}\nfunction decodeOffsetFetchResponse(resp) {\n  var topics = {};\n  Binary.parse(resp).word32bs('size').word32bs('correlationId').word32bs('topicNum').loop(decodeTopics(decodePartitions));\n  function decodePartitions(end, vars) {\n    if (--vars.partitionNum === 0) end();\n    topics[vars.topic] = topics[vars.topic] || {};\n    this.word32bs('partition').word64bs('offset').word16bs('metadata').tap(function (vars) {\n      if (vars.metadata === -1) {\n        return;\n      }\n      this.buffer('metadata', vars.metadata);\n    }).word16bs('errorCode').tap(function (vars) {\n      topics[vars.topic][vars.partition] = vars.errorCode === 0 ? vars.offset : -1;\n    });\n  }\n  return topics;\n}\nfunction decodeOffsetFetchV1Response(resp) {\n  var topics = {};\n  Binary.parse(resp).word32bs('size').word32bs('correlationId').word32bs('topicNum').loop(decodeTopics(decodePartitions));\n  function decodePartitions(end, vars) {\n    if (--vars.partitionNum === 0) end();\n    topics[vars.topic] = topics[vars.topic] || {};\n    this.word32bs('partition').word64bs('offset').word16bs('metadata').tap(function (vars) {\n      if (vars.metadata === -1) {\n        return;\n      }\n      this.buffer('metadata', vars.metadata);\n    }).word16bs('errorCode').tap(function (vars) {\n      if (vars.metadata.length === 0 && vars.offset === 0) {\n        topics[vars.topic][vars.partition] = -1;\n      } else {\n        topics[vars.topic][vars.partition] = vars.errorCode === 0 ? vars.offset : -1;\n      }\n    });\n  }\n  return topics;\n}\nfunction encodeOffsetRequest(clientId, correlationId, payloads) {\n  payloads = groupByTopic(payloads);\n  var request = encodeRequestHeader(clientId, correlationId, REQUEST_TYPE.offset);\n  var topics = Object.keys(payloads);\n  request.Int32BE(REPLICA_ID).Int32BE(topics.length);\n  topics.forEach(function (topic) {\n    request.Int16BE(topic.length).string(topic);\n    var partitions = _.toPairs(payloads[topic]).map(function (pairs) {\n      return pairs[1];\n    });\n    request.Int32BE(partitions.length);\n    partitions.forEach(function (p) {\n      request.Int32BE(p.partition).Int64BE(p.time).Int32BE(p.maxNum);\n    });\n  });\n  return encodeRequestWithLength(request.make());\n}\nfunction decodeOffsetResponse(resp) {\n  var topics = {};\n  Binary.parse(resp).word32bs('size').word32bs('correlationId').word32bs('topicNum').loop(decodeTopics(decodePartitions));\n  function decodePartitions(end, vars) {\n    if (--vars.partitionNum === 0) end();\n    topics[vars.topic] = topics[vars.topic] || {};\n    this.word32bs('partition').word16bs('errorCode').word32bs('offsetNum').loop(decodeOffsets);\n  }\n  function decodeOffsets(end, vars) {\n    if (--vars.offsetNum <= 0) end();\n    topics[vars.topic][vars.partition] = topics[vars.topic][vars.partition] || [];\n    this.word64bs('offset').tap(function (vars) {\n      if (vars.offset != null) topics[vars.topic][vars.partition].push(vars.offset);\n    });\n  }\n  return topics;\n}\nfunction encodeGroupCoordinatorRequest(clientId, correlationId, groupId) {\n  var request = encodeRequestHeader(clientId, correlationId, REQUEST_TYPE.groupCoordinator);\n  request.Int16BE(groupId.length).string(groupId);\n  return encodeRequestWithLength(request.make());\n}\nfunction encodeGroupHeartbeatRequest(clientId, correlationId, groupId, generationId, memberId) {\n  var request = encodeRequestHeader(clientId, correlationId, REQUEST_TYPE.heartbeat);\n  request.Int16BE(groupId.length).string(groupId).Int32BE(generationId).Int16BE(memberId.length).string(memberId);\n  return encodeRequestWithLength(request.make());\n}\nfunction decodeGroupHeartbeatResponse(resp) {\n  var result = null;\n  Binary.parse(resp).word32bs('size').word32bs('correlationId').word16bs('errorCode').tap(function (vars) {\n    result = createGroupError(vars.errorCode);\n  });\n  return result;\n}\nfunction decodeGroupCoordinatorResponse(resp) {\n  var result;\n  Binary.parse(resp).word32bs('size').word32bs('correlationId').word16bs('errorCode').word32bs('coordinatorId').word16bs('coordinatorHost').tap(function (vars) {\n    this.buffer('coordinatorHost', vars.coordinatorHost);\n    vars.coordinatorHost = vars.coordinatorHost.toString();\n  }).word32bs('coordinatorPort').tap(function (vars) {\n    if (vars.errorCode !== 0) {\n      result = createGroupError(vars.errorCode);\n      return;\n    }\n    result = {\n      coordinatorHost: vars.coordinatorHost,\n      coordinatorPort: vars.coordinatorPort,\n      coordinatorId: vars.coordinatorId\n    };\n  });\n  return result;\n}\n\n/*\n\nProtocolType => \"consumer\"\n\nProtocolName => AssignmentStrategy\n  AssignmentStrategy => string\n\nProtocolMetadata => Version Subscription UserData\n  Version => int16\n  Subscription => [Topic]\n    Topic => string\n  UserData => bytes\n*/\n\nfunction encodeGroupProtocol(protocol) {\n  this.Int16BE(protocol.name.length).string(protocol.name).string(_encodeProtocolData(protocol));\n}\nfunction _encodeProtocolData(protocol) {\n  var protocolByte = new Buffermaker().Int16BE(protocol.version).Int32BE(protocol.subscription.length);\n  protocol.subscription.forEach(function (topic) {\n    protocolByte.Int16BE(topic.length).string(topic);\n  });\n  if (protocol.userData) {\n    var userDataStr = JSON.stringify(protocol.userData);\n    var data = Buffer.from(userDataStr, 'utf8');\n    protocolByte.Int32BE(data.length).string(data);\n  } else {\n    protocolByte.Int32BE(-1);\n  }\n  return encodeRequestWithLength(protocolByte.make());\n}\nfunction decodeSyncGroupResponse(resp) {\n  var result;\n  Binary.parse(resp).word32bs('size').word32bs('correlationId').word16bs('errorCode').tap(function (vars) {\n    result = createGroupError(vars.errorCode);\n  }).word32bs('memberAssignment').tap(function (vars) {\n    if (result) {\n      return;\n    }\n    this.buffer('memberAssignment', vars.memberAssignment);\n    result = decodeMemberAssignment(vars.memberAssignment);\n  });\n  return result;\n}\n\n/*\nMemberAssignment => Version PartitionAssignment\n  Version => int16\n  PartitionAssignment => [Topic [Partition]]\n    Topic => string\n    Partition => int32\n  UserData => bytes\n*/\n\nfunction decodeMemberAssignment(assignmentBytes) {\n  var assignment = {\n    partitions: {}\n  };\n  Binary.parse(assignmentBytes).word16bs('version').tap(function (vars) {\n    assignment.version = vars.version;\n  }).word32bs('partitionAssignment').loop(function (end, vars) {\n    if (vars.partitionAssignment-- === 0) return end();\n    var topic;\n    var partitions = [];\n    this.word16bs('topic').tap(function (vars) {\n      this.buffer('topic', vars.topic);\n      topic = vars.topic.toString();\n    }).word32bs('partitionsNum').loop(function (end, vars) {\n      if (vars.partitionsNum-- === 0) return end();\n      this.word32bs('partition').tap(function (vars) {\n        partitions.push(vars.partition);\n      });\n    });\n    assignment.partitions[topic] = partitions;\n  }).word32bs('userData').tap(function (vars) {\n    if (vars.userData == null || vars.userData === -1) {\n      return;\n    }\n    this.buffer('userData', vars.userData);\n    try {\n      assignment.userData = JSON.parse(vars.userData.toString());\n    } catch (e) {\n      assignment.userData = 'JSON Parse error';\n    }\n  });\n  return assignment;\n}\nfunction encodeSyncGroupRequest(clientId, correlationId, groupId, generationId, memberId, groupAssignment) {\n  var request = encodeRequestHeader(clientId, correlationId, REQUEST_TYPE.syncGroup);\n  request.Int16BE(groupId.length).string(groupId).Int32BE(generationId).Int16BE(memberId.length).string(memberId);\n  if (groupAssignment && groupAssignment.length) {\n    request.Int32BE(groupAssignment.length);\n    groupAssignment.forEach(function (assignment) {\n      request.Int16BE(assignment.memberId.length).string(assignment.memberId).string(_encodeMemberAssignment(assignment));\n    });\n  } else {\n    request.Int32BE(0);\n  }\n  return encodeRequestWithLength(request.make());\n}\nfunction _encodeMemberAssignment(assignment) {\n  var numberOfTopics = Object.keys(assignment.topicPartitions).length;\n  var assignmentByte = new Buffermaker().Int16BE(assignment.version).Int32BE(numberOfTopics);\n  for (var tp in assignment.topicPartitions) {\n    if (!assignment.topicPartitions.hasOwnProperty(tp)) {\n      continue;\n    }\n    var partitions = assignment.topicPartitions[tp];\n    assignmentByte.Int16BE(tp.length).string(tp).Int32BE(partitions.length);\n    partitions.forEach(function (partition) {\n      assignmentByte.Int32BE(partition);\n    });\n  }\n  if (assignment.userData) {\n    var userDataStr = JSON.stringify(assignment.userData);\n    var data = Buffer.from(userDataStr, 'utf8');\n    assignmentByte.Int32BE(data.length).string(data);\n  } else {\n    assignmentByte.Int32BE(-1);\n  }\n  return encodeRequestWithLength(assignmentByte.make());\n}\nfunction encodeLeaveGroupRequest(clientId, correlationId, groupId, memberId) {\n  var request = encodeRequestHeader(clientId, correlationId, REQUEST_TYPE.leaveGroup);\n  request.Int16BE(groupId.length).string(groupId).Int16BE(memberId.length).string(memberId);\n  return encodeRequestWithLength(request.make());\n}\nfunction decodeLeaveGroupResponse(resp) {\n  var error = null;\n  Binary.parse(resp).word32bs('size').word32bs('correlationId').word16bs('errorCode').tap(function (vars) {\n    error = createGroupError(vars.errorCode);\n  });\n  return error;\n}\n\n// {\n//   name: '', // string\n//   subscription: [/* topics */],\n//   version: 0, // integer\n//   userData: {} //arbitary\n// }\n\n/*\nJoinGroupRequest => GroupId SessionTimeout MemberId ProtocolType GroupProtocols\n  GroupId => string\n  SessionTimeout => int32\n  MemberId => string\n  ProtocolType => string\n  GroupProtocols => [ProtocolName ProtocolMetadata]\n    ProtocolName => string\n    ProtocolMetadata => bytes\n*/\n\nfunction encodeJoinGroupRequest(clientId, correlationId, groupId, memberId, sessionTimeout, groupProtocols) {\n  var request = encodeRequestHeader(clientId, correlationId, REQUEST_TYPE.joinGroup);\n  request.Int16BE(groupId.length).string(groupId).Int32BE(sessionTimeout).Int16BE(memberId.length).string(memberId).Int16BE(GROUPS_PROTOCOL_TYPE.length).string(GROUPS_PROTOCOL_TYPE).Int32BE(groupProtocols.length);\n  groupProtocols.forEach(encodeGroupProtocol.bind(request));\n  return encodeRequestWithLength(request.make());\n}\n\n/*\n\nv0 and v1 supported in 0.9.0 and greater\nJoinGroupResponse => ErrorCode GenerationId GroupProtocol LeaderId MemberId Members\n  ErrorCode => int16\n  GenerationId => int32\n  GroupProtocol => string\n  LeaderId => string\n  MemberId => string\n  Members => [MemberId MemberMetadata]\n    MemberId => string\n    MemberMetadata => bytes\n*/\nfunction decodeJoinGroupResponse(resp) {\n  var result = {\n    members: []\n  };\n  var error;\n  Binary.parse(resp).word32bs('size').word32bs('correlationId').word16bs('errorCode').tap(function (vars) {\n    error = createGroupError(vars.errorCode);\n  }).word32bs('generationId').tap(function (vars) {\n    result.generationId = vars.generationId;\n  }).word16bs('groupProtocol').tap(function (vars) {\n    this.buffer('groupProtocol', vars.groupProtocol);\n    result.groupProtocol = vars.groupProtocol = vars.groupProtocol.toString();\n  }).word16bs('leaderId').tap(function (vars) {\n    this.buffer('leaderId', vars.leaderId);\n    result.leaderId = vars.leaderId = vars.leaderId.toString();\n  }).word16bs('memberId').tap(function (vars) {\n    this.buffer('memberId', vars.memberId);\n    result.memberId = vars.memberId = vars.memberId.toString();\n  }).word32bs('memberNum').loop(function (end, vars) {\n    if (error) {\n      return end();\n    }\n    if (vars.memberNum-- === 0) return end();\n    var memberMetadata;\n    this.word16bs('groupMemberId').tap(function (vars) {\n      this.buffer('groupMemberId', vars.groupMemberId);\n      vars.memberId = vars.groupMemberId.toString();\n    }).word32bs('memberMetadata').tap(function (vars) {\n      if (vars.memberMetadata > -1) {\n        this.buffer('memberMetadata', vars.memberMetadata);\n        memberMetadata = decodeGroupData(this.vars.memberMetadata);\n        memberMetadata.id = vars.memberId;\n        result.members.push(memberMetadata);\n      }\n    });\n  });\n  return error || result;\n}\nfunction decodeGroupData(resp) {\n  var topics = [];\n  var parsed = Binary.parse(resp).word16bs('version').word32bs('subscriptionNum').loop(function decodeSubscription(end, vars) {\n    if (vars.subscriptionNum-- === 0) return end();\n    this.word16bs('topic').tap(function () {\n      this.buffer('topic', vars.topic);\n      topics.push(vars.topic.toString());\n    });\n  }).word32bs('userData').tap(function (vars) {\n    if (vars.userData === -1) {\n      vars.userData = undefined;\n      return;\n    }\n    this.buffer('userData', vars.userData);\n    try {\n      vars.userData = JSON.parse(vars.userData.toString());\n    } catch (error) {\n      vars.userData = 'JSON parse error';\n    }\n  }).vars;\n  return {\n    subscription: topics,\n    version: parsed.version,\n    userData: parsed.userData\n  };\n}\nfunction encodeDescribeGroups(clientId, correlationId, groups) {\n  const request = encodeRequestHeader(clientId, correlationId, REQUEST_TYPE.describeGroups);\n  request.Int32BE(groups.length);\n  groups.forEach(groupId => {\n    request.Int16BE(groupId.length).string(groupId);\n  });\n  return encodeRequestWithLength(request.make());\n}\nfunction decodeDescribeGroups(resp) {\n  let results = {};\n  let error;\n  Binary.parse(resp).word32bs('size').word32bs('correlationId').word32bs('describeNum').loop(decodeDescriptions);\n  function decodeDescriptions(end, vars) {\n    if (vars.describeNum-- === 0) return end();\n    let described = {\n      members: []\n    };\n    this.word16bs('errorCode').tap(vars => {\n      error = createGroupError(vars.errorCode);\n    }).word16bs('groupId').tap(vars => {\n      this.buffer('groupId', vars.groupId);\n      described.groupId = vars.groupId.toString();\n    }).word16bs('state').tap(vars => {\n      this.buffer('state', vars.state);\n      described.state = vars.state.toString();\n    }).word16bs('protocolType').tap(vars => {\n      this.buffer('protocolType', vars.protocolType);\n      described.protocolType = vars.protocolType.toString();\n    }).word16bs('protocol').tap(vars => {\n      this.buffer('protocol', vars.protocol);\n      described.protocol = vars.protocol.toString();\n\n      // keep this for error cases\n      results[described.groupId] = described;\n    }).word32bs('membersNum').loop(function decodeGroupMembers(end, vars) {\n      if (vars.membersNum-- === 0) return end();\n      let member = {};\n      this.word16bs('memberId').tap(vars => {\n        this.buffer('memberId', vars.memberId);\n        member.memberId = vars.memberId.toString();\n      }).word16bs('clientId').tap(vars => {\n        this.buffer('clientId', vars.clientId);\n        member.clientId = vars.clientId.toString();\n      }).word16bs('clientHost').tap(vars => {\n        this.buffer('clientHost', vars.clientHost);\n        member.clientHost = vars.clientHost.toString();\n      }).word32bs('memberMetadata').tap(vars => {\n        if (vars.memberMetadata > -1) {\n          this.buffer('memberMetadata', vars.memberMetadata);\n          let memberMetadata = decodeGroupData(vars.memberMetadata);\n          memberMetadata.id = member.memberId;\n          member.memberMetadata = memberMetadata;\n        }\n      }).word32bs('memberAssignment').tap(vars => {\n        this.buffer('memberAssignment', vars.memberAssignment);\n        member.memberAssignment = decodeMemberAssignment(vars.memberAssignment);\n        described.members.push(member);\n        results[described.groupId] = described;\n      });\n    });\n  }\n  return error || results;\n}\nfunction encodeListGroups(clientId, correlationId) {\n  return encodeRequestWithLength(encodeRequestHeader(clientId, correlationId, REQUEST_TYPE.listGroups).make());\n}\nfunction decodeListGroups(resp) {\n  let groups = {};\n  let error;\n  Binary.parse(resp).word32bs('size').word32bs('correlationId').word16bs('errorCode').tap(vars => {\n    error = createGroupError(vars.errorCode);\n  }).word32bs('groupNum').loop(function (end, vars) {\n    if (vars.groupNum-- === 0) return end();\n    this.word16bs('groupId').tap(function (vars) {\n      this.buffer('groupId', vars.groupId);\n      vars.groupId = vars.groupId.toString();\n    }).word16bs('protocolType').tap(function (vars) {\n      this.buffer('protocolType', vars.protocolType);\n      groups[vars.groupId] = vars.protocolType.toString();\n    });\n  });\n  return error || groups;\n}\nfunction encodeVersionsRequest(clientId, correlationId) {\n  return encodeRequestWithLength(encodeRequestHeader(clientId, correlationId, REQUEST_TYPE.apiVersions).make());\n}\nfunction decodeVersionsResponse(resp) {\n  const MAX_SUPPORT_VERSION = require('./protocolVersions').maxSupport;\n  const versions = Object.create(null);\n  let error = null;\n  Binary.parse(resp).word32bs('size').word32bs('correlationId').word16bs('errorCode').tap(function (vars) {\n    error = createGroupError(vars.errorCode);\n  }).word32bs('apiNum').loop(function (end, vars) {\n    if (vars.apiNum-- === 0 || error) return end();\n    let apiKey, minVersion, maxVersion;\n    this.word16bs('apiKey').tap(vars => {\n      apiKey = vars.apiKey;\n    }).word16bs('minVersion').tap(vars => {\n      minVersion = vars.minVersion;\n    }).word16bs('maxVersion').tap(vars => {\n      maxVersion = vars.maxVersion;\n    });\n    const apiName = apiKey in API_KEY_TO_NAME ? API_KEY_TO_NAME[apiKey] : apiKey;\n    versions[apiName] = {\n      min: minVersion,\n      max: maxVersion,\n      usable: MAX_SUPPORT_VERSION[apiName] != null ? Math.min(MAX_SUPPORT_VERSION[apiName], maxVersion) : false\n    };\n  });\n  return error || versions;\n}\nfunction encodeDescribeConfigsRequest(clientId, correlationId, payload) {\n  return _encodeDescribeConfigsRequest(clientId, correlationId, payload, 0);\n}\nfunction encodeDescribeConfigsRequestV1(clientId, correlationId, payload) {\n  return _encodeDescribeConfigsRequest(clientId, correlationId, payload, 1);\n}\nfunction encodeDescribeConfigsRequestV2(clientId, correlationId, payload) {\n  return _encodeDescribeConfigsRequest(clientId, correlationId, payload, 2);\n}\nfunction _encodeDescribeConfigsRequest(clientId, correlationId, payload, apiVersion) {\n  let request = encodeRequestHeader(clientId, correlationId, REQUEST_TYPE.describeConfigs, apiVersion);\n  const resources = payload.resources;\n  request.Int32BE(resources.length);\n  resources.forEach(function (resource) {\n    request.Int8(resource.resourceType);\n    request.Int16BE(resource.resourceName.length);\n    request.string(resource.resourceName);\n    if (resource.configNames === null || Array.isArray(resource.configNames) && resource.configNames.length === 0) {\n      request.Int32BE(-1); // -1 will fetch all config entries for the resource\n    } else {\n      request.Int32BE(resource.configNames.length);\n      resource.configNames.forEach(function (configName) {\n        request.Int16BE(configName.length).string(configName);\n      });\n    }\n  });\n  if (apiVersion > 0) {\n    request.Int8(payload.includeSynonyms || 0);\n  }\n  return encodeRequestWithLength(request.make());\n}\nfunction decodeDescribeConfigsResponse(resp) {\n  return _decodeDescribeConfigsResponse(resp, 0);\n}\nfunction decodeDescribeConfigsResponseV1(resp) {\n  return _decodeDescribeConfigsResponse(resp, 1);\n}\nfunction decodeDescribeConfigsResponseV2(resp) {\n  return _decodeDescribeConfigsResponse(resp, 2);\n}\nfunction _decodeDescribeConfigsResponse(resp, apiVersion) {\n  let resources = [];\n  let error;\n  Binary.parse(resp).word32bs('size').word32bs('correlationId').word32bs('throttleTime').word32bs('resourceNum').loop(decodeResources);\n  function decodeResources(end, vars) {\n    if (vars.resourceNum-- === 0) return end();\n    let resource = {\n      configEntries: []\n    };\n    this.word16bs('errorCode').word16bs('errorMessage').tap(function (vars) {\n      if (vars.errorCode !== 0) {\n        if (vars.errorMessage === -1) {\n          vars.errorMessage = '';\n        } else {\n          this.buffer('errorMessage', vars.errorMessage);\n          vars.errorMessage = vars.errorMessage.toString();\n        }\n        error = vars.errorCode === 42 ? new InvalidRequestError(vars.errorMessage) : createGroupError(vars.errorCode);\n      }\n    }).word8bs('resourceType').word16bs('resourceName').tap(function (vars) {\n      this.buffer('resourceName', vars.resourceName);\n      resource.resourceType = vars.resourceType.toString();\n      resource.resourceName = vars.resourceName.toString();\n    }).word32bs('configEntriesNum').loop(decodeConfigEntries).tap(function () {\n      resources.push(resource);\n    });\n    function decodeConfigEntries(end, vars) {\n      if (vars.configEntriesNum === -1 || vars.configEntriesNum-- === 0) return end();\n      let configEntry = {\n        synonyms: []\n      };\n      this.word16bs('configName').tap(function (vars) {\n        this.buffer('configName', vars.configName);\n        configEntry.configName = vars.configName.toString();\n      }).word16bs('configValue').tap(function (vars) {\n        if (vars.configValue === -1) {\n          vars.configValue = '';\n        } else {\n          this.buffer('configValue', vars.configValue);\n          vars.configValue = vars.configValue.toString();\n        }\n        configEntry.configValue = vars.configValue;\n      }).word8bs('readOnly').word8bs('configSource').word8bs('isSensitive').tap(function () {\n        if (apiVersion > 0) {\n          this.word32bs('configSynonymsNum');\n          this.loop(decodeConfigSynonyms);\n        }\n      }).tap(function (vars) {\n        configEntry.readOnly = Boolean(vars.readOnly);\n        configEntry.configSource = vars.configSource;\n        configEntry.isSensitive = Boolean(vars.isSensitive);\n        resource.configEntries.push(configEntry);\n      });\n      function decodeConfigSynonyms(end, vars) {\n        if (vars.configSynonymsNum === -1 || vars.configSynonymsNum-- === 0) return end();\n        let configSynonym = {};\n        this.word16bs('configSynonymName').tap(function (vars) {\n          this.buffer('configSynonymName', vars.configSynonymName);\n          configSynonym.configSynonymName = vars.configSynonymName.toString();\n        }).word16bs('configSynonymValue').tap(function (vars) {\n          if (vars.configSynonymValue === -1) {\n            configSynonym.configSynonymValue = '';\n          } else {\n            this.buffer('configSynonymValue', vars.configSynonymValue);\n            configSynonym.configSynonymValue = vars.configSynonymValue.toString();\n          }\n        }).word8bs('configSynonymSource').tap(function () {\n          configSynonym.configSynonymSource = vars.configSynonymSource.toString();\n          configEntry.synonyms.push(configSynonym);\n        });\n      }\n    }\n  }\n  return error || resources;\n}\nexports.encodeSaslHandshakeRequest = encodeSaslHandshakeRequest;\nexports.decodeSaslHandshakeResponse = decodeSaslHandshakeResponse;\nexports.encodeSaslAuthenticateRequest = encodeSaslAuthenticateRequest;\nexports.decodeSaslAuthenticateResponse = decodeSaslAuthenticateResponse;\nexports.encodeFetchRequest = encodeFetchRequest;\nexports.decodeFetchResponse = decodeFetchResponse;\nexports.encodeFetchRequestV1 = encodeFetchRequestV1;\nexports.decodeFetchResponseV1 = decodeFetchResponseV1;\nexports.encodeFetchRequestV2 = encodeFetchRequestV2;\nexports.encodeOffsetCommitRequest = encodeOffsetCommitRequest;\nexports.encodeOffsetCommitV1Request = encodeOffsetCommitV1Request;\nexports.encodeOffsetCommitV2Request = encodeOffsetCommitV2Request;\nexports.decodeOffsetCommitResponse = decodeOffsetCommitResponse;\nexports.encodeOffsetFetchRequest = encodeOffsetFetchRequest;\nexports.encodeOffsetFetchV1Request = encodeOffsetFetchV1Request;\nexports.decodeOffsetFetchResponse = decodeOffsetFetchResponse;\nexports.decodeOffsetFetchV1Response = decodeOffsetFetchV1Response;\nexports.encodeMetadataRequest = encodeMetadataRequest;\nexports.decodeMetadataResponse = decodeMetadataResponse;\nexports.encodeMetadataV1Request = encodeMetadataV1Request;\nexports.decodeMetadataV1Response = decodeMetadataV1Response;\nexports.encodeCreateTopicRequest = encodeCreateTopicRequest;\nexports.encodeCreateTopicRequestV1 = encodeCreateTopicRequestV1;\nexports.decodeCreateTopicResponse = decodeCreateTopicResponse;\nexports.decodeCreateTopicResponseV1 = decodeCreateTopicResponseV1;\nexports.encodeProduceRequest = encodeProduceRequest;\nexports.encodeProduceV1Request = encodeProduceV1Request;\nexports.encodeProduceV2Request = encodeProduceV2Request;\nexports.decodeProduceResponse = decodeProduceResponse;\nexports.decodeProduceV1Response = decodeProduceV1Response;\nexports.decodeProduceV2Response = decodeProduceV2Response;\nexports.encodeOffsetRequest = encodeOffsetRequest;\nexports.decodeOffsetResponse = decodeOffsetResponse;\nexports.encodeMessageSet = encodeMessageSet;\nexports.encodeJoinGroupRequest = encodeJoinGroupRequest;\nexports.decodeJoinGroupResponse = decodeJoinGroupResponse;\nexports.encodeGroupCoordinatorRequest = encodeGroupCoordinatorRequest;\nexports.decodeGroupCoordinatorResponse = decodeGroupCoordinatorResponse;\nexports.encodeGroupHeartbeatRequest = encodeGroupHeartbeatRequest;\nexports.decodeGroupHeartbeatResponse = decodeGroupHeartbeatResponse;\nexports.encodeSyncGroupRequest = encodeSyncGroupRequest;\nexports.decodeSyncGroupResponse = decodeSyncGroupResponse;\nexports.encodeLeaveGroupRequest = encodeLeaveGroupRequest;\nexports.decodeLeaveGroupResponse = decodeLeaveGroupResponse;\nexports.encodeDescribeGroups = encodeDescribeGroups;\nexports.decodeDescribeGroups = decodeDescribeGroups;\nexports.encodeListGroups = encodeListGroups;\nexports.decodeListGroups = decodeListGroups;\nexports.encodeVersionsRequest = encodeVersionsRequest;\nexports.decodeVersionsResponse = decodeVersionsResponse;\nexports.encodeDescribeConfigsRequest = encodeDescribeConfigsRequest;\nexports.encodeDescribeConfigsRequestV1 = encodeDescribeConfigsRequestV1;\nexports.encodeDescribeConfigsRequestV2 = encodeDescribeConfigsRequestV2;\nexports.decodeDescribeConfigsResponse = decodeDescribeConfigsResponse;\nexports.decodeDescribeConfigsResponseV1 = decodeDescribeConfigsResponseV1;\nexports.decodeDescribeConfigsResponseV2 = decodeDescribeConfigsResponseV2;","map":{"version":3,"names":["require","Binary","Buffermaker","_","crc32","protocol","getCodec","REQUEST_TYPE","ERROR_CODE","GROUP_ERROR","PartitionMetadata","API_KEY_TO_NAME","invert","MessageSizeTooLarge","SaslAuthenticationError","InvalidRequestError","async","API_VERSION","REPLICA_ID","GROUPS_PROTOCOL_TYPE","groupByTopic","payloads","reduce","out","p","topic","partition","encodeRequestWithLength","request","Int32BE","length","string","make","encodeRequestHeader","clientId","correlationId","apiKey","apiVersion","Int16BE","encodeSaslHandshakeRequest","mechanism","saslHandshake","toUpperCase","decodeSaslHandshakeResponse","resp","mechanisms","errorCode","parse","word32bs","word16bs","tap","vars","loop","_decodeMechanisms","end","numMechanisms","word16be","buffer","mechanismSize","push","encodeSaslAuthenticateRequest","saslOpts","username","password","authBytes","Int8","Error","saslAuthenticate","decodeSaslAuthenticateResponse","errorMessage","errorMessageLength","toString","authBytesLength","encodeFetchRequest","maxWaitMs","minBytes","_encodeFetchRequest","encodeFetchRequestV1","encodeFetchRequestV2","decodeTopics","decodePartitions","topicNum","version","fetch","topics","Object","keys","forEach","partitions","toPairs","map","pairs","Int64BE","offset","maxBytes","decodeFetchResponse","cb","maxTickMessages","_decodeFetchResponse","decodeFetchResponseV1","createGroupError","error","events","eventCount","series","err","partitionNum","hadError","word64bs","messageSetSize","next","highWaterOffset","magicByte","messageSet","skip","word8bs","decodeMessageSet","enqueuedTask","process","nextTick","data","enqueue","emit","lastOffset","innerMessages","cur","partial","messageSize","key","value","attributes","codec","message","timestamp","Date","decode","inlineMessageSet","noop","slice","len","encodeMetadataRequest","_encodeMetadataRequest","decodeMetadataResponse","_decodeMetadataResponse","encodeMetadataV1Request","decodeMetadataV1Response","metadata","Array","isArray","brokers","controllerId","errors","decodeBrokers","_decodeTopics","brokerNum","host","rack","nodeId","port","topicError","replicasNum","replicas","bufferToArray","isrNum","isr","leader","isEmpty","clusterMetadata","encodeCreateTopicRequest","timeoutMs","_encodeCreateTopicRequest","encodeCreateTopicRequestV1","createTopics","replicaAssignment","replicationFactor","replica","configEntries","config","name","decodeCreateTopicResponse","_decodeCreateTopicResponse","decodeCreateTopicResponseV1","topicErrorResponses","num","ret","i","r","encodeOffsetCommitRequest","group","_encodeOffsetCommitRequest","encodeOffsetCommitV2Request","generationId","memberId","encodeOffsetCommitGenericRequest","encodeOffsetCommitV1Request","offsetCommit","decodeOffsetCommitResponse","errorcode","encodeProduceRequest","requireAcks","ackTimeoutMs","_encodeProduceRequest","encodeProduceV1Request","encodeProduceV2Request","produce","reqs","encodeMessageSet","messages","magic","msg","encodeMessage","m","setValueOnBuffer","crc","signed","Buffer","isBuffer","byteLength","decodeProduceV1Response","decodeProduceV2Response","decodeProduceResponse","encodeOffsetFetchRequest","_encodeOffsetFetchRequest","encodeOffsetFetchV1Request","offsetFetch","decodeOffsetFetchResponse","decodeOffsetFetchV1Response","encodeOffsetRequest","time","maxNum","decodeOffsetResponse","decodeOffsets","offsetNum","encodeGroupCoordinatorRequest","groupId","groupCoordinator","encodeGroupHeartbeatRequest","heartbeat","decodeGroupHeartbeatResponse","result","decodeGroupCoordinatorResponse","coordinatorHost","coordinatorPort","coordinatorId","encodeGroupProtocol","_encodeProtocolData","protocolByte","subscription","userData","userDataStr","JSON","stringify","from","decodeSyncGroupResponse","memberAssignment","decodeMemberAssignment","assignmentBytes","assignment","partitionAssignment","partitionsNum","e","encodeSyncGroupRequest","groupAssignment","syncGroup","_encodeMemberAssignment","numberOfTopics","topicPartitions","assignmentByte","tp","hasOwnProperty","encodeLeaveGroupRequest","leaveGroup","decodeLeaveGroupResponse","encodeJoinGroupRequest","sessionTimeout","groupProtocols","joinGroup","bind","decodeJoinGroupResponse","members","groupProtocol","leaderId","memberNum","memberMetadata","groupMemberId","decodeGroupData","id","parsed","decodeSubscription","subscriptionNum","undefined","encodeDescribeGroups","groups","describeGroups","decodeDescribeGroups","results","decodeDescriptions","describeNum","described","state","protocolType","decodeGroupMembers","membersNum","member","clientHost","encodeListGroups","listGroups","decodeListGroups","groupNum","encodeVersionsRequest","apiVersions","decodeVersionsResponse","MAX_SUPPORT_VERSION","maxSupport","versions","create","apiNum","minVersion","maxVersion","apiName","min","max","usable","Math","encodeDescribeConfigsRequest","payload","_encodeDescribeConfigsRequest","encodeDescribeConfigsRequestV1","encodeDescribeConfigsRequestV2","describeConfigs","resources","resource","resourceType","resourceName","configNames","configName","includeSynonyms","decodeDescribeConfigsResponse","_decodeDescribeConfigsResponse","decodeDescribeConfigsResponseV1","decodeDescribeConfigsResponseV2","decodeResources","resourceNum","decodeConfigEntries","configEntriesNum","configEntry","synonyms","configValue","decodeConfigSynonyms","readOnly","Boolean","configSource","isSensitive","configSynonymsNum","configSynonym","configSynonymName","configSynonymValue","configSynonymSource","exports"],"sources":["D:/Project/VUEJSSPRING_CRUD_JWT/vue-crud-api-jwt-vuex/node_modules/kafka-node/lib/protocol/protocol.js"],"sourcesContent":["'use strict';\n\nvar Binary = require('binary');\nvar Buffermaker = require('buffermaker');\nvar _ = require('lodash');\nvar crc32 = require('buffer-crc32');\nvar protocol = require('./protocol_struct');\nvar getCodec = require('../codec');\nvar REQUEST_TYPE = protocol.REQUEST_TYPE;\nvar ERROR_CODE = protocol.ERROR_CODE;\nvar GROUP_ERROR = protocol.GROUP_ERROR;\nvar PartitionMetadata = protocol.PartitionMetadata;\nconst API_KEY_TO_NAME = _.invert(REQUEST_TYPE);\nconst MessageSizeTooLarge = require('../errors/MessageSizeTooLargeError');\nconst SaslAuthenticationError = require('../errors/SaslAuthenticationError');\nconst InvalidRequestError = require('../errors/InvalidRequestError');\nconst async = require('async');\n\nvar API_VERSION = 0;\nvar REPLICA_ID = -1;\nvar GROUPS_PROTOCOL_TYPE = 'consumer';\n\nfunction groupByTopic (payloads) {\n  return payloads.reduce(function (out, p) {\n    out[p.topic] = out[p.topic] || {};\n    out[p.topic][p.partition] = p;\n    return out;\n  }, {});\n}\n\nfunction encodeRequestWithLength (request) {\n  return new Buffermaker().Int32BE(request.length).string(request).make();\n}\n\nfunction encodeRequestHeader (clientId, correlationId, apiKey, apiVersion) {\n  return new Buffermaker()\n    .Int16BE(apiKey)\n    .Int16BE(apiVersion || API_VERSION)\n    .Int32BE(correlationId)\n    .Int16BE(clientId.length)\n    .string(clientId);\n}\n\nfunction encodeSaslHandshakeRequest (clientId, correlationId, apiVersion, mechanism) {\n  var request = encodeRequestHeader(clientId, correlationId, REQUEST_TYPE.saslHandshake, apiVersion);\n  request.Int16BE(mechanism.length).string(mechanism.toUpperCase());\n  return encodeRequestWithLength(request.make());\n}\n\nfunction decodeSaslHandshakeResponse (resp) {\n  var mechanisms = [];\n  var errorCode = null;\n\n  Binary.parse(resp)\n    .word32bs('size')\n    .word32bs('correlationId')\n    .word16bs('errorCode')\n    .tap(function (vars) {\n      errorCode = vars.errorCode;\n    })\n    .word32bs('numMechanisms')\n    .loop(_decodeMechanisms);\n\n  function _decodeMechanisms (end, vars) {\n    if (vars.numMechanisms-- === 0) {\n      return end();\n    }\n    this\n      .word16be('mechanismSize')\n      .tap(function (vars) {\n        this.buffer('mechanism', vars.mechanismSize);\n        mechanisms.push(vars.mechanism);\n      });\n  }\n  if (errorCode == null || errorCode === 0) {\n    return mechanisms;\n  }\n  return new SaslAuthenticationError(errorCode, 'Handshake failed.');\n}\n\nfunction encodeSaslAuthenticateRequest (clientId, correlationId, apiVersion, saslOpts) {\n  //\n  // FIXME From the Kafka protocol docs:\n  //       If SaslHandshakeRequest version is v0, a series of SASL client and server tokens\n  //       corresponding to the mechanism are sent as opaque packets without wrapping the\n  //       messages with Kafka protocol headers. If SaslHandshakeRequest version is v1, the\n  //       SaslAuthenticate request/response are used, where the actual SASL tokens are\n  //       wrapped in the Kafka protocol.\n  //\n  var username = saslOpts.username || '';\n  var password = saslOpts.password || '';\n  var authBytes = null;\n  if (saslOpts.mechanism.toUpperCase() === 'PLAIN') {\n    authBytes =\n      (new Buffermaker())\n        .string(username).Int8(0)\n        .string(username).Int8(0)\n        .string(password)\n        .make();\n  } else {\n    return new Error('unsupported SASL auth type: ' + saslOpts.mechanism.toUpperCase());\n  }\n\n  if (apiVersion === 0) {\n    return encodeRequestWithLength(authBytes);\n  }\n\n  var request = encodeRequestHeader(clientId, correlationId, REQUEST_TYPE.saslAuthenticate, 0);\n  request.Int32BE(authBytes.length).string(authBytes);\n  return encodeRequestWithLength(request.make());\n}\n\nfunction decodeSaslAuthenticateResponse (resp) {\n  var errorCode = null;\n  var errorMessage = null;\n  var authBytes = null;\n  Binary.parse(resp)\n    .word32bs('size')\n    .word32bs('correlationId')\n    .word16bs('errorCode')\n    .word16bs('errorMessageLength')\n    .tap(function (vars) {\n      errorCode = vars.errorCode;\n      this.buffer('errorMessage', vars.errorMessageLength);\n      errorMessage = vars.errorMessage.toString();\n    })\n    .word32bs('authBytesLength')\n    .tap(function (vars) {\n      this.buffer('authBytes', vars.authBytesLength);\n      authBytes = vars.authBytes.toString();\n    });\n  if (errorCode == null || errorCode === 0) {\n    return authBytes;\n  }\n  return new SaslAuthenticationError(errorCode, errorMessage);\n}\n\nfunction encodeFetchRequest (maxWaitMs, minBytes) {\n  return function encodeFetchRequest (clientId, correlationId, payloads) {\n    return _encodeFetchRequest(clientId, correlationId, payloads, maxWaitMs, minBytes);\n  };\n}\n\nfunction encodeFetchRequestV1 (maxWaitMs, minBytes) {\n  return function encodeFetchRequest (clientId, correlationId, payloads) {\n    return _encodeFetchRequest(clientId, correlationId, payloads, maxWaitMs, minBytes, 1);\n  };\n}\n\nfunction encodeFetchRequestV2 (maxWaitMs, minBytes) {\n  return function encodeFetchRequest (clientId, correlationId, payloads) {\n    return _encodeFetchRequest(clientId, correlationId, payloads, maxWaitMs, minBytes, 2);\n  };\n}\n\nfunction decodeTopics (decodePartitions) {\n  return function (end, vars) {\n    if (--vars.topicNum === 0) end();\n    this.word16bs('topic')\n      .tap(function (vars) {\n        this.buffer('topic', vars.topic);\n        vars.topic = vars.topic.toString();\n      })\n      .word32bs('partitionNum')\n      .loop(decodePartitions);\n  };\n}\n\nfunction _encodeFetchRequest (clientId, correlationId, payloads, maxWaitMs, minBytes, version) {\n  payloads = groupByTopic(payloads);\n  var request = encodeRequestHeader(clientId, correlationId, REQUEST_TYPE.fetch, version);\n  var topics = Object.keys(payloads);\n\n  request.Int32BE(REPLICA_ID).Int32BE(maxWaitMs).Int32BE(minBytes).Int32BE(topics.length);\n\n  topics.forEach(function (topic) {\n    request.Int16BE(topic.length).string(topic);\n\n    var partitions = _.toPairs(payloads[topic]).map(function (pairs) {\n      return pairs[1];\n    });\n    request.Int32BE(partitions.length);\n    partitions.forEach(function (p) {\n      request.Int32BE(p.partition).Int64BE(p.offset).Int32BE(p.maxBytes);\n    });\n  });\n\n  return encodeRequestWithLength(request.make());\n}\n\nfunction decodeFetchResponse (cb, maxTickMessages) {\n  return function (resp) {\n    return _decodeFetchResponse(resp, cb, maxTickMessages, 0);\n  };\n}\n\nfunction decodeFetchResponseV1 (cb, maxTickMessages) {\n  return function (resp) {\n    return _decodeFetchResponse(resp, cb, maxTickMessages, 1);\n  };\n}\n\nfunction createGroupError (errorCode) {\n  if (errorCode == null || errorCode === 0) {\n    return null;\n  }\n\n  var error = ERROR_CODE[errorCode];\n  if (error in GROUP_ERROR) {\n    error = new GROUP_ERROR[error]('Kafka Error Code: ' + errorCode);\n  } else {\n    error = new Error(error);\n  }\n  error.errorCode = errorCode;\n  return error;\n}\n\nfunction _decodeFetchResponse (resp, cb, maxTickMessages, version) {\n  if (!cb) {\n    throw new Error('Missing callback');\n  }\n\n  var topics = {};\n  var events = [];\n  let eventCount = 0;\n\n  cb(null, 'processingfetch');\n  Binary.parse(resp)\n    .word32bs('size')\n    .word32bs('correlationId')\n    .tap(function () {\n      if (version >= 1) {\n        this.word32bs('throttleTime');\n      }\n    })\n    .word32bs('topicNum')\n    .loop(decodeTopics(decodePartitions));\n\n  // Parsing is all sync, but emitting events is async due to compression\n  // At this point, the enqueue chain should be populated in order, and at\n  // the end, the 'topics' map above should be fully populated.\n  // topics is not ready for use until all events are processed, as an async\n  // decompression may add more offsets to the topic map.\n  async.series(events, (err) => {\n    if (err) {\n      cb(err);\n    }\n    cb(null, 'done', topics);\n  });\n\n  function decodePartitions (end, vars) {\n    if (--vars.partitionNum === 0) end();\n    topics[vars.topic] = topics[vars.topic] || {};\n    let hadError = false;\n    this.word32bs('partition')\n      .word16bs('errorCode')\n      .word64bs('highWaterOffset')\n      .word32bs('messageSetSize')\n      .tap(function (vars) {\n        this.buffer('messageSet', vars.messageSetSize);\n        const errorCode = vars.errorCode;\n        const topic = vars.topic;\n        const partition = vars.partition;\n\n        if (errorCode !== 0) {\n          return events.push((next) => {\n            const err = new Error(ERROR_CODE[errorCode]);\n            err.topic = topic;\n            err.partition = partition;\n            cb(err);\n            next();\n          });\n        }\n\n        const highWaterOffset = vars.highWaterOffset;\n        const { magicByte } = Binary.parse(vars.messageSet).skip(16).word8bs('magicByte').vars;\n\n        if (magicByte != null && magicByte > 1) {\n          return events.push((next) => {\n            const err = new Error('Not a message set. Magic byte is ' + magicByte);\n            err.topic = topic;\n            err.partition = partition;\n            cb(err);\n            next();\n          });\n        }\n\n        decodeMessageSet(\n          topic,\n          partition,\n          vars.messageSet,\n          (enqueuedTask) => {\n            events.push(enqueuedTask);\n            if (maxTickMessages && ++eventCount >= maxTickMessages) {\n              eventCount = 0;\n              events.push((next) => process.nextTick(next));\n            }\n          },\n          (err, data) => {\n            if (err) {\n              hadError = true;\n            } else if (hadError) {\n              return; // Once we've had an error on this partition, don't emit any more messages\n            }\n            if (!err && data) {\n              topics[topic][partition] = data.offset;\n\n              cb(null, 'message', data);\n            } else {\n              cb(err);\n            }\n          },\n          highWaterOffset,\n          topics\n        );\n      });\n  }\n}\n\nfunction decodeMessageSet (topic, partition, messageSet, enqueue, emit, highWaterOffset, topics, lastOffset) {\n  const messageSetSize = messageSet.length;\n  // TODO: this is broken logic. It overwrites previous partitions HWO.\n  // Need to refactor this on next major API bump\n  topics[topic].highWaterOffset = highWaterOffset;\n\n  let innerMessages = [];\n\n  while (messageSet.length > 0) {\n    var cur = 8 + 4 + 4 + 1 + 1 + 4 + 4;\n    var partial = false;\n    Binary.parse(messageSet)\n      .word64bs('offset')\n      .word32bs('messageSize')\n      .tap(function (vars) {\n        if (vars.messageSize > messageSet.length - 12) {\n          partial = true;\n        }\n      })\n      .word32bs('crc')\n      .word8bs('magicByte')\n      .word8bs('attributes')\n      .tap(function (vars) {\n        if (vars.magicByte > 0) {\n          this.word64bs('timestamp');\n          cur += 8;\n        }\n      })\n      .word32bs('key')\n      .tap(function (vars) {\n        if (vars.key === -1) {\n          vars.key = null;\n          return;\n        }\n        cur += vars.key;\n        this.buffer('key', vars.key);\n      })\n      .word32bs('value')\n      .tap(function (vars) {\n        if (vars.value !== -1) {\n          cur += vars.value;\n          this.buffer('value', vars.value);\n        } else {\n          vars.value = null;\n        }\n\n        if (vars.attributes === 0 && vars.messageSize > messageSetSize) {\n          const offset = vars.offset;\n          return enqueue(next => {\n            emit(\n              new MessageSizeTooLarge({\n                topic: topic,\n                offset: offset,\n                partition: partition\n              })\n            );\n            next(null);\n          });\n        }\n\n        if (!partial && vars.offset !== null) {\n          const offset = vars.offset;\n          const value = vars.value;\n          const key = vars.key;\n          const magicByte = vars.magicByte;\n          var codec = getCodec(vars.attributes);\n          if (!codec) {\n            const message = {\n              topic: topic,\n              value: value,\n              offset: offset,\n              partition: partition,\n              highWaterOffset: highWaterOffset,\n              key: key\n            };\n\n            if (vars.timestamp) {\n              message.timestamp = new Date(vars.timestamp);\n            }\n\n            if (lastOffset != null) {\n              // need to fix offset skipping enqueue till later\n              innerMessages.push(message);\n              return;\n            }\n\n            enqueue((next) => {\n              emit(null, message);\n              next(null);\n            });\n            return;\n          }\n          enqueue((next) => {\n            codec.decode(value, function (error, inlineMessageSet) {\n              if (error) {\n                emit(error);\n                next(null);\n                return;\n              }\n              decodeMessageSet(topic, partition, inlineMessageSet, (cb) => {\n                cb(_.noop);\n              }, emit, highWaterOffset, topics, magicByte === 1 ? offset : null);\n\n              // Delay 1 tick as this isn't counted to max tick messages, give a breather\n              process.nextTick(() => next(null));\n            });\n          });\n        }\n      });\n    // Skip decoding binary left in the message set if partial message detected\n    if (partial) break;\n    messageSet = messageSet.slice(cur);\n  }\n\n  if (lastOffset != null && innerMessages.length) {\n    // contains inner messages, need to fix up offsets\n    let len = innerMessages.length - 1;\n    for (const message of innerMessages) {\n      const offset = lastOffset - len--;\n      message.offset = offset;\n      enqueue((next) => {\n        emit(null, message);\n        next(null);\n      });\n    }\n  }\n}\n\nfunction encodeMetadataRequest (clientId, correlationId, topics) {\n  return _encodeMetadataRequest(clientId, correlationId, topics, 0);\n}\n\nfunction decodeMetadataResponse (resp) {\n  return _decodeMetadataResponse(resp, 0);\n}\n\nfunction encodeMetadataV1Request (clientId, correlationId, topics) {\n  return _encodeMetadataRequest(clientId, correlationId, topics, 1);\n}\n\nfunction decodeMetadataV1Response (resp) {\n  return _decodeMetadataResponse(resp, 1);\n}\n\nfunction _encodeMetadataRequest (clientId, correlationId, topics, version) {\n  var request = encodeRequestHeader(clientId, correlationId, REQUEST_TYPE.metadata, version);\n\n  // In version 0 an empty array will fetch all topics.\n  // In version 1+ a null value (-1) will fetch all topics. An empty array returns no topics.\n  // This adds support for maintaining version 0 behaviour in client regardless of kafka version ([] = fetch all topics).\n  if (version > 0 && ((Array.isArray(topics) && topics.length === 0) || topics === null)) {\n    request.Int32BE(-1);\n    return encodeRequestWithLength(request.make());\n  }\n\n  // Handle case where null is provided but version requested was 0 (not supported).\n  // Can happen if the api versions requests fails and fallback api support is used.\n  if (version === 0 && topics === null) {\n    topics = [];\n  }\n\n  request.Int32BE(topics.length);\n  topics.forEach(function (topic) {\n    request.Int16BE(topic.length).string(topic);\n  });\n  return encodeRequestWithLength(request.make());\n}\n\nfunction _decodeMetadataResponse (resp, version) {\n  var brokers = {};\n  var out = {};\n  var topics = {};\n  var controllerId = -1;\n  var errors = [];\n  Binary.parse(resp)\n    .word32bs('size')\n    .word32bs('correlationId')\n    .word32bs('brokerNum')\n    .loop(decodeBrokers)\n    .tap(function (vars) {\n      if (version < 1) {\n        return;\n      }\n\n      this.word32bs('controllerId');\n      controllerId = vars.controllerId;\n    })\n    .word32bs('topicNum')\n    .loop(_decodeTopics);\n\n  function decodeBrokers (end, vars) {\n    if (vars.brokerNum-- === 0) return end();\n    this.word32bs('nodeId')\n      .word16bs('host')\n      .tap(function (vars) {\n        this.buffer('host', vars.host);\n        vars.host = vars.host.toString();\n      })\n      .word32bs('port')\n      .tap(function (vars) {\n        if (version < 1) {\n          return;\n        }\n\n        this.word16bs('rack');\n        if (vars.rack === -1) {\n          vars.rack = '';\n        } else {\n          this.buffer('rack', vars.rack);\n          vars.rack = vars.rack.toString();\n        }\n      })\n      .tap(function (vars) {\n        brokers[vars.nodeId] = { nodeId: vars.nodeId, host: vars.host, port: vars.port };\n      });\n  }\n\n  function _decodeTopics (end, vars) {\n    if (vars.topicNum-- === 0) return end();\n    this.word16bs('topicError')\n      .word16bs('topic')\n      .tap(function (vars) {\n        this.buffer('topic', vars.topic);\n        vars.topic = vars.topic.toString();\n\n        if (version < 1) {\n          return;\n        }\n\n        this.word8bs('isInternal');\n      })\n      .word32bs('partitionNum')\n      .tap(function (vars) {\n        if (vars.topicError !== 0) {\n          return errors.push(ERROR_CODE[vars.topicError]);\n        }\n        this.loop(decodePartitions);\n      });\n  }\n\n  function decodePartitions (end, vars) {\n    if (vars.partitionNum-- === 0) return end();\n    topics[vars.topic] = topics[vars.topic] || {};\n    this.word16bs('errorCode')\n      .word32bs('partition')\n      .word32bs('leader')\n      .word32bs('replicasNum')\n      .tap(function (vars) {\n        var buffer = this.buffer('replicas', vars.replicasNum * 4).vars.replicas;\n        this.vars.replicas = bufferToArray(vars.replicasNum, buffer);\n      })\n      .word32bs('isrNum')\n      .tap(function (vars) {\n        var buffer = this.buffer('isr', vars.isrNum * 4).vars.isr;\n        this.vars.isr = bufferToArray(vars.isrNum, buffer);\n        if (vars.errorCode === 0 || vars.errorCode === 9) {\n          topics[vars.topic][vars.partition] = new PartitionMetadata(\n            vars.topic,\n            vars.partition,\n            vars.leader,\n            vars.replicas,\n            vars.isr\n          );\n        } else {\n          errors.push(ERROR_CODE[vars.errorCode]);\n        }\n      });\n  }\n\n  if (!_.isEmpty(errors)) out.error = errors;\n  out.metadata = topics;\n\n  if (version > 0) {\n    out.clusterMetadata = {\n      controllerId\n    };\n  }\n\n  return [brokers, out];\n}\n\nfunction encodeCreateTopicRequest (clientId, correlationId, topics, timeoutMs) {\n  return _encodeCreateTopicRequest(clientId, correlationId, topics, timeoutMs, 0);\n}\n\nfunction encodeCreateTopicRequestV1 (clientId, correlationId, topics, timeoutMs) {\n  return _encodeCreateTopicRequest(clientId, correlationId, topics, timeoutMs, 1);\n}\n\nfunction _encodeCreateTopicRequest (clientId, correlationId, topics, timeoutMs, version) {\n  var request = encodeRequestHeader(clientId, correlationId, REQUEST_TYPE.createTopics, version);\n  request.Int32BE(topics.length);\n  topics.forEach(function (topic) {\n    request.Int16BE(topic.topic.length).string(topic.topic);\n\n    // When replica assignment is used, partitions and replication factor must be unset (-1)\n    if (topic.replicaAssignment) {\n      request.Int32BE(-1);\n      request.Int16BE(-1);\n    } else {\n      request.Int32BE(topic.partitions);\n      request.Int16BE(topic.replicationFactor);\n    }\n\n    if (topic.replicaAssignment) {\n      request.Int32BE(topic.replicaAssignment.length);\n      topic.replicaAssignment.forEach(function (replicaAssignment) {\n        request.Int32BE(replicaAssignment.partition);\n        request.Int32BE(replicaAssignment.replicas.length);\n        replicaAssignment.replicas.forEach(function (replica) {\n          request.Int32BE(replica);\n        });\n      });\n    } else {\n      request.Int32BE(0);\n    }\n\n    if (topic.configEntries) {\n      request.Int32BE(topic.configEntries.length);\n      topic.configEntries.forEach(function (config) {\n        request.Int16BE(config.name.length).string(config.name);\n\n        if (config.value == null) {\n          request.Int16BE(-1);\n        } else {\n          request.Int16BE(config.value.length).string(config.value);\n        }\n      });\n    } else {\n      request.Int32BE(0);\n    }\n  });\n  request.Int32BE(timeoutMs);\n\n  // Validate only is 1+\n  if (version > 0) {\n    request.Int8(0);\n  }\n\n  return encodeRequestWithLength(request.make());\n}\n\nfunction decodeCreateTopicResponse (resp) {\n  return _decodeCreateTopicResponse(resp, 0);\n}\n\nfunction decodeCreateTopicResponseV1 (resp) {\n  return _decodeCreateTopicResponse(resp, 1);\n}\n\nfunction _decodeCreateTopicResponse (resp, version) {\n  var topicErrorResponses = [];\n  var error;\n\n  Binary.parse(resp)\n    .word32bs('size')\n    .word32bs('correlationId')\n    .word32bs('topicNum')\n    .loop(decodeTopics);\n\n  function decodeTopics (end, vars) {\n    if (vars.topicNum-- === 0) return end();\n\n    this.word16bs('topic')\n      .tap(function (vars) {\n        this.buffer('topic', vars.topic);\n        vars.topic = vars.topic.toString();\n      })\n      .word16bs('errorCode')\n      .tap(function (vars) {\n        if (version > 0) {\n          this.word16bs('errorMessage');\n\n          if (vars.errorMessage !== -1) {\n            this.buffer('errorMessage', vars.errorMessage);\n            vars.errorMessage = vars.errorMessage.toString();\n          }\n        }\n\n        if (vars.errorCode === 0) {\n          return;\n        }\n\n        // Errors that are not related to the actual topic(s) but the entire request\n        // (like timeout and sending the request to a non-controller)\n        if (vars.errorCode === 7 || vars.errorCode === 41) {\n          error = createGroupError(vars.errorCode);\n          return;\n        }\n\n        if (version > 0) {\n          topicErrorResponses.push({\n            topic: vars.topic,\n            error: vars.errorMessage\n          });\n        } else {\n          topicErrorResponses.push({\n            topic: vars.topic,\n            error: 'received error code ' + vars.errorCode + ' for topic'\n          });\n        }\n      });\n  }\n\n  return error || topicErrorResponses;\n}\n\nfunction bufferToArray (num, buffer) {\n  var ret = [];\n  for (var i = 0; i < num; i++) {\n    ret.push(Binary.parse(buffer).word32bs('r').vars.r);\n    buffer = buffer.slice(4);\n  }\n  return ret;\n}\n\nfunction encodeOffsetCommitRequest (group) {\n  return function (clientId, correlationId, payloads) {\n    return _encodeOffsetCommitRequest(clientId, correlationId, group, payloads);\n  };\n}\n\nfunction encodeOffsetCommitV2Request (clientId, correlationId, group, generationId, memberId, payloads) {\n  return encodeOffsetCommitGenericRequest(clientId, correlationId, group, generationId, memberId, payloads, 2);\n}\n\nfunction encodeOffsetCommitV1Request (clientId, correlationId, group, generationId, memberId, payloads) {\n  return encodeOffsetCommitGenericRequest(clientId, correlationId, group, generationId, memberId, payloads, 1);\n}\n\nfunction encodeOffsetCommitGenericRequest (\n  clientId,\n  correlationId,\n  group,\n  generationId,\n  memberId,\n  payloads,\n  apiVersion\n) {\n  payloads = groupByTopic(payloads);\n  var request = encodeRequestHeader(clientId, correlationId, REQUEST_TYPE.offsetCommit, apiVersion);\n  var topics = Object.keys(payloads);\n\n  request\n    .Int16BE(group.length)\n    .string(group)\n    .Int32BE(generationId)\n    .Int16BE(memberId.length)\n    .string(memberId)\n    .Int64BE(-1)\n    .Int32BE(topics.length);\n\n  topics.forEach(function (topic) {\n    request.Int16BE(topic.length).string(topic);\n\n    var partitions = _.toPairs(payloads[topic]).map(function (pairs) {\n      return pairs[1];\n    });\n    request.Int32BE(partitions.length);\n    partitions.forEach(function (p) {\n      request.Int32BE(p.partition).Int64BE(p.offset).Int16BE(p.metadata.length).string(p.metadata);\n    });\n  });\n\n  return encodeRequestWithLength(request.make());\n}\n\nfunction _encodeOffsetCommitRequest (clientId, correlationId, group, payloads) {\n  payloads = groupByTopic(payloads);\n  var request = encodeRequestHeader(clientId, correlationId, REQUEST_TYPE.offsetCommit);\n  var topics = Object.keys(payloads);\n\n  request.Int16BE(group.length).string(group).Int32BE(topics.length);\n\n  topics.forEach(function (topic) {\n    request.Int16BE(topic.length).string(topic);\n\n    var partitions = _.toPairs(payloads[topic]).map(function (pairs) {\n      return pairs[1];\n    });\n    request.Int32BE(partitions.length);\n    partitions.forEach(function (p) {\n      request.Int32BE(p.partition).Int64BE(p.offset).Int16BE(p.metadata.length).string(p.metadata);\n    });\n  });\n\n  return encodeRequestWithLength(request.make());\n}\n\nfunction decodeOffsetCommitResponse (resp) {\n  var topics = {};\n  Binary.parse(resp)\n    .word32bs('size')\n    .word32bs('correlationId')\n    .word32bs('topicNum')\n    .loop(decodeTopics(decodePartitions));\n\n  function decodePartitions (end, vars) {\n    if (--vars.partitionNum === 0) end();\n    topics[vars.topic] = topics[vars.topic] || {};\n    this.word32bs('partition').word16bs('errorcode').tap(function (vars) {\n      topics[vars.topic]['partition'] = vars.partition;\n      topics[vars.topic]['errorCode'] = vars.errorcode;\n    });\n  }\n  return topics;\n}\n\nfunction encodeProduceRequest (requireAcks, ackTimeoutMs) {\n  return function (clientId, correlationId, payloads) {\n    return _encodeProduceRequest(clientId, correlationId, payloads, requireAcks, ackTimeoutMs, 0);\n  };\n}\n\nfunction encodeProduceV1Request (requireAcks, ackTimeoutMs) {\n  return function (clientId, correlationId, payloads) {\n    return _encodeProduceRequest(clientId, correlationId, payloads, requireAcks, ackTimeoutMs, 1);\n  };\n}\n\nfunction encodeProduceV2Request (requireAcks, ackTimeoutMs) {\n  return function (clientId, correlationId, payloads) {\n    return _encodeProduceRequest(clientId, correlationId, payloads, requireAcks, ackTimeoutMs, 2);\n  };\n}\n\nfunction _encodeProduceRequest (clientId, correlationId, payloads, requireAcks, ackTimeoutMs, apiVersion) {\n  payloads = groupByTopic(payloads);\n  var request = encodeRequestHeader(clientId, correlationId, REQUEST_TYPE.produce, apiVersion);\n  var topics = Object.keys(payloads);\n  request.Int16BE(requireAcks).Int32BE(ackTimeoutMs).Int32BE(topics.length);\n\n  topics.forEach(function (topic) {\n    request.Int16BE(topic.length).string(topic);\n\n    var reqs = _.toPairs(payloads[topic]).map(function (pairs) {\n      return pairs[1];\n    });\n    request.Int32BE(reqs.length);\n    reqs.forEach(function (p) {\n      var messageSet = encodeMessageSet(p.messages, apiVersion === 2 ? 1 : 0);\n      request.Int32BE(p.partition).Int32BE(messageSet.length).string(messageSet);\n    });\n  });\n\n  return encodeRequestWithLength(request.make());\n}\n\nfunction encodeMessageSet (messageSet, magic) {\n  var buffer = new Buffermaker();\n  messageSet.forEach(function (message) {\n    var msg = encodeMessage(message, magic);\n    buffer.Int64BE(0).Int32BE(msg.length).string(msg);\n  });\n  return buffer.make();\n}\n\nfunction encodeMessage (message, magic) {\n  if (magic == null) {\n    magic = 0;\n  }\n  var m = new Buffermaker().Int8(magic).Int8(message.attributes);\n\n  // Add timestamp support for new messages\n  if (magic === 1) {\n    m.Int64BE(message.timestamp);\n  }\n\n  var key = message.key;\n  setValueOnBuffer(m, key);\n\n  var value = message.value;\n  setValueOnBuffer(m, value);\n\n  m = m.make();\n  var crc = crc32.signed(m);\n  return new Buffermaker().Int32BE(crc).string(m).make();\n}\n\nfunction setValueOnBuffer (buffer, value) {\n  if (value != null) {\n    if (Buffer.isBuffer(value)) {\n      buffer.Int32BE(value.length);\n    } else {\n      if (typeof value !== 'string') value = value.toString();\n      buffer.Int32BE(Buffer.byteLength(value));\n    }\n    buffer.string(value);\n  } else {\n    buffer.Int32BE(-1);\n  }\n}\n\nfunction decodeProduceV1Response (resp) {\n  var topics = {};\n  var error;\n  Binary.parse(resp)\n    .word32bs('size')\n    .word32bs('correlationId')\n    .word32bs('topicNum')\n    .loop(decodeTopics(decodePartitions))\n    .word32bs('throttleTime');\n\n  function decodePartitions (end, vars) {\n    if (--vars.partitionNum === 0) end();\n    topics[vars.topic] = topics[vars.topic] || {};\n    this.word32bs('partition').word16bs('errorCode').word64bs('offset').tap(function (vars) {\n      if (vars.errorCode) {\n        error = new Error(ERROR_CODE[vars.errorCode]);\n      } else {\n        topics[vars.topic][vars.partition] = vars.offset;\n      }\n    });\n  }\n  return error || topics;\n}\n\nfunction decodeProduceV2Response (resp) {\n  var topics = {};\n  var error;\n  Binary.parse(resp)\n    .word32bs('size')\n    .word32bs('correlationId')\n    .word32bs('topicNum')\n    .loop(decodeTopics(decodePartitions))\n    .word32bs('throttleTime');\n\n  function decodePartitions (end, vars) {\n    if (--vars.partitionNum === 0) end();\n    topics[vars.topic] = topics[vars.topic] || {};\n    this.word32bs('partition').word16bs('errorCode').word64bs('offset').word64bs('timestamp').tap(function (vars) {\n      if (vars.errorCode) {\n        error = new Error(ERROR_CODE[vars.errorCode]);\n      } else {\n        topics[vars.topic][vars.partition] = vars.offset;\n      }\n    });\n  }\n  return error || topics;\n}\n\nfunction decodeProduceResponse (resp) {\n  var topics = {};\n  var error;\n  Binary.parse(resp)\n    .word32bs('size')\n    .word32bs('correlationId')\n    .word32bs('topicNum')\n    .loop(decodeTopics(decodePartitions));\n\n  function decodePartitions (end, vars) {\n    if (--vars.partitionNum === 0) end();\n    topics[vars.topic] = topics[vars.topic] || {};\n    this.word32bs('partition').word16bs('errorCode').word64bs('offset').tap(function (vars) {\n      if (vars.errorCode) {\n        error = new Error(ERROR_CODE[vars.errorCode]);\n      } else {\n        topics[vars.topic][vars.partition] = vars.offset;\n      }\n    });\n  }\n  return error || topics;\n}\n\nfunction encodeOffsetFetchRequest (group) {\n  return function (clientId, correlationId, payloads) {\n    return _encodeOffsetFetchRequest(clientId, correlationId, group, payloads);\n  };\n}\n\nfunction encodeOffsetFetchV1Request (clientId, correlationId, group, payloads) {\n  var request = encodeRequestHeader(clientId, correlationId, REQUEST_TYPE.offsetFetch, 1);\n  var topics = Object.keys(payloads);\n\n  request.Int16BE(group.length).string(group).Int32BE(topics.length);\n\n  topics.forEach(function (topic) {\n    request.Int16BE(topic.length).string(topic).Int32BE(payloads[topic].length);\n\n    payloads[topic].forEach(function (p) {\n      request.Int32BE(p);\n    });\n  });\n\n  return encodeRequestWithLength(request.make());\n}\n\nfunction _encodeOffsetFetchRequest (clientId, correlationId, group, payloads) {\n  payloads = groupByTopic(payloads);\n  var request = encodeRequestHeader(clientId, correlationId, REQUEST_TYPE.offsetFetch);\n  var topics = Object.keys(payloads);\n\n  request.Int16BE(group.length).string(group).Int32BE(topics.length);\n\n  topics.forEach(function (topic) {\n    request.Int16BE(topic.length).string(topic);\n\n    var partitions = _.toPairs(payloads[topic]).map(function (pairs) {\n      return pairs[1];\n    });\n    request.Int32BE(partitions.length);\n    partitions.forEach(function (p) {\n      request.Int32BE(p.partition);\n    });\n  });\n\n  return encodeRequestWithLength(request.make());\n}\n\nfunction decodeOffsetFetchResponse (resp) {\n  var topics = {};\n  Binary.parse(resp)\n    .word32bs('size')\n    .word32bs('correlationId')\n    .word32bs('topicNum')\n    .loop(decodeTopics(decodePartitions));\n\n  function decodePartitions (end, vars) {\n    if (--vars.partitionNum === 0) end();\n    topics[vars.topic] = topics[vars.topic] || {};\n    this.word32bs('partition')\n      .word64bs('offset')\n      .word16bs('metadata')\n      .tap(function (vars) {\n        if (vars.metadata === -1) {\n          return;\n        }\n\n        this.buffer('metadata', vars.metadata);\n      })\n      .word16bs('errorCode')\n      .tap(function (vars) {\n        topics[vars.topic][vars.partition] = vars.errorCode === 0 ? vars.offset : -1;\n      });\n  }\n  return topics;\n}\n\nfunction decodeOffsetFetchV1Response (resp) {\n  var topics = {};\n  Binary.parse(resp)\n    .word32bs('size')\n    .word32bs('correlationId')\n    .word32bs('topicNum')\n    .loop(decodeTopics(decodePartitions));\n\n  function decodePartitions (end, vars) {\n    if (--vars.partitionNum === 0) end();\n    topics[vars.topic] = topics[vars.topic] || {};\n    this.word32bs('partition')\n      .word64bs('offset')\n      .word16bs('metadata')\n      .tap(function (vars) {\n        if (vars.metadata === -1) {\n          return;\n        }\n\n        this.buffer('metadata', vars.metadata);\n      })\n      .word16bs('errorCode')\n      .tap(function (vars) {\n        if (vars.metadata.length === 0 && vars.offset === 0) {\n          topics[vars.topic][vars.partition] = -1;\n        } else {\n          topics[vars.topic][vars.partition] = vars.errorCode === 0 ? vars.offset : -1;\n        }\n      });\n  }\n  return topics;\n}\n\nfunction encodeOffsetRequest (clientId, correlationId, payloads) {\n  payloads = groupByTopic(payloads);\n  var request = encodeRequestHeader(clientId, correlationId, REQUEST_TYPE.offset);\n  var topics = Object.keys(payloads);\n\n  request.Int32BE(REPLICA_ID).Int32BE(topics.length);\n\n  topics.forEach(function (topic) {\n    request.Int16BE(topic.length).string(topic);\n\n    var partitions = _.toPairs(payloads[topic]).map(function (pairs) {\n      return pairs[1];\n    });\n    request.Int32BE(partitions.length);\n    partitions.forEach(function (p) {\n      request.Int32BE(p.partition).Int64BE(p.time).Int32BE(p.maxNum);\n    });\n  });\n\n  return encodeRequestWithLength(request.make());\n}\n\nfunction decodeOffsetResponse (resp) {\n  var topics = {};\n  Binary.parse(resp)\n    .word32bs('size')\n    .word32bs('correlationId')\n    .word32bs('topicNum')\n    .loop(decodeTopics(decodePartitions));\n\n  function decodePartitions (end, vars) {\n    if (--vars.partitionNum === 0) end();\n    topics[vars.topic] = topics[vars.topic] || {};\n    this.word32bs('partition').word16bs('errorCode').word32bs('offsetNum').loop(decodeOffsets);\n  }\n\n  function decodeOffsets (end, vars) {\n    if (--vars.offsetNum <= 0) end();\n    topics[vars.topic][vars.partition] = topics[vars.topic][vars.partition] || [];\n    this.word64bs('offset').tap(function (vars) {\n      if (vars.offset != null) topics[vars.topic][vars.partition].push(vars.offset);\n    });\n  }\n  return topics;\n}\n\nfunction encodeGroupCoordinatorRequest (clientId, correlationId, groupId) {\n  var request = encodeRequestHeader(clientId, correlationId, REQUEST_TYPE.groupCoordinator);\n  request.Int16BE(groupId.length).string(groupId);\n  return encodeRequestWithLength(request.make());\n}\n\nfunction encodeGroupHeartbeatRequest (clientId, correlationId, groupId, generationId, memberId) {\n  var request = encodeRequestHeader(clientId, correlationId, REQUEST_TYPE.heartbeat);\n  request.Int16BE(groupId.length).string(groupId).Int32BE(generationId).Int16BE(memberId.length).string(memberId);\n  return encodeRequestWithLength(request.make());\n}\n\nfunction decodeGroupHeartbeatResponse (resp) {\n  var result = null;\n  Binary.parse(resp).word32bs('size').word32bs('correlationId').word16bs('errorCode').tap(function (vars) {\n    result = createGroupError(vars.errorCode);\n  });\n  return result;\n}\n\nfunction decodeGroupCoordinatorResponse (resp) {\n  var result;\n  Binary.parse(resp)\n    .word32bs('size')\n    .word32bs('correlationId')\n    .word16bs('errorCode')\n    .word32bs('coordinatorId')\n    .word16bs('coordinatorHost')\n    .tap(function (vars) {\n      this.buffer('coordinatorHost', vars.coordinatorHost);\n      vars.coordinatorHost = vars.coordinatorHost.toString();\n    })\n    .word32bs('coordinatorPort')\n    .tap(function (vars) {\n      if (vars.errorCode !== 0) {\n        result = createGroupError(vars.errorCode);\n        return;\n      }\n\n      result = {\n        coordinatorHost: vars.coordinatorHost,\n        coordinatorPort: vars.coordinatorPort,\n        coordinatorId: vars.coordinatorId\n      };\n    });\n  return result;\n}\n\n/*\n\nProtocolType => \"consumer\"\n\nProtocolName => AssignmentStrategy\n  AssignmentStrategy => string\n\nProtocolMetadata => Version Subscription UserData\n  Version => int16\n  Subscription => [Topic]\n    Topic => string\n  UserData => bytes\n*/\n\nfunction encodeGroupProtocol (protocol) {\n  this.Int16BE(protocol.name.length).string(protocol.name).string(_encodeProtocolData(protocol));\n}\n\nfunction _encodeProtocolData (protocol) {\n  var protocolByte = new Buffermaker().Int16BE(protocol.version).Int32BE(protocol.subscription.length);\n  protocol.subscription.forEach(function (topic) {\n    protocolByte.Int16BE(topic.length).string(topic);\n  });\n\n  if (protocol.userData) {\n    var userDataStr = JSON.stringify(protocol.userData);\n    var data = Buffer.from(userDataStr, 'utf8');\n    protocolByte.Int32BE(data.length).string(data);\n  } else {\n    protocolByte.Int32BE(-1);\n  }\n\n  return encodeRequestWithLength(protocolByte.make());\n}\n\nfunction decodeSyncGroupResponse (resp) {\n  var result;\n  Binary.parse(resp)\n    .word32bs('size')\n    .word32bs('correlationId')\n    .word16bs('errorCode')\n    .tap(function (vars) {\n      result = createGroupError(vars.errorCode);\n    })\n    .word32bs('memberAssignment')\n    .tap(function (vars) {\n      if (result) {\n        return;\n      }\n      this.buffer('memberAssignment', vars.memberAssignment);\n      result = decodeMemberAssignment(vars.memberAssignment);\n    });\n\n  return result;\n}\n\n/*\nMemberAssignment => Version PartitionAssignment\n  Version => int16\n  PartitionAssignment => [Topic [Partition]]\n    Topic => string\n    Partition => int32\n  UserData => bytes\n*/\n\nfunction decodeMemberAssignment (assignmentBytes) {\n  var assignment = {\n    partitions: {}\n  };\n\n  Binary.parse(assignmentBytes)\n    .word16bs('version')\n    .tap(function (vars) {\n      assignment.version = vars.version;\n    })\n    .word32bs('partitionAssignment')\n    .loop(function (end, vars) {\n      if (vars.partitionAssignment-- === 0) return end();\n\n      var topic;\n      var partitions = [];\n\n      this.word16bs('topic')\n        .tap(function (vars) {\n          this.buffer('topic', vars.topic);\n          topic = vars.topic.toString();\n        })\n        .word32bs('partitionsNum')\n        .loop(function (end, vars) {\n          if (vars.partitionsNum-- === 0) return end();\n          this.word32bs('partition').tap(function (vars) {\n            partitions.push(vars.partition);\n          });\n        });\n      assignment.partitions[topic] = partitions;\n    })\n    .word32bs('userData')\n    .tap(function (vars) {\n      if (vars.userData == null || vars.userData === -1) {\n        return;\n      }\n      this.buffer('userData', vars.userData);\n      try {\n        assignment.userData = JSON.parse(vars.userData.toString());\n      } catch (e) {\n        assignment.userData = 'JSON Parse error';\n      }\n    });\n\n  return assignment;\n}\n\nfunction encodeSyncGroupRequest (clientId, correlationId, groupId, generationId, memberId, groupAssignment) {\n  var request = encodeRequestHeader(clientId, correlationId, REQUEST_TYPE.syncGroup);\n  request.Int16BE(groupId.length).string(groupId).Int32BE(generationId).Int16BE(memberId.length).string(memberId);\n\n  if (groupAssignment && groupAssignment.length) {\n    request.Int32BE(groupAssignment.length);\n    groupAssignment.forEach(function (assignment) {\n      request\n        .Int16BE(assignment.memberId.length)\n        .string(assignment.memberId)\n        .string(_encodeMemberAssignment(assignment));\n    });\n  } else {\n    request.Int32BE(0);\n  }\n\n  return encodeRequestWithLength(request.make());\n}\n\nfunction _encodeMemberAssignment (assignment) {\n  var numberOfTopics = Object.keys(assignment.topicPartitions).length;\n\n  var assignmentByte = new Buffermaker().Int16BE(assignment.version).Int32BE(numberOfTopics);\n\n  for (var tp in assignment.topicPartitions) {\n    if (!assignment.topicPartitions.hasOwnProperty(tp)) {\n      continue;\n    }\n    var partitions = assignment.topicPartitions[tp];\n    assignmentByte.Int16BE(tp.length).string(tp).Int32BE(partitions.length);\n\n    partitions.forEach(function (partition) {\n      assignmentByte.Int32BE(partition);\n    });\n  }\n\n  if (assignment.userData) {\n    var userDataStr = JSON.stringify(assignment.userData);\n    var data = Buffer.from(userDataStr, 'utf8');\n    assignmentByte.Int32BE(data.length).string(data);\n  } else {\n    assignmentByte.Int32BE(-1);\n  }\n\n  return encodeRequestWithLength(assignmentByte.make());\n}\n\nfunction encodeLeaveGroupRequest (clientId, correlationId, groupId, memberId) {\n  var request = encodeRequestHeader(clientId, correlationId, REQUEST_TYPE.leaveGroup);\n  request.Int16BE(groupId.length).string(groupId).Int16BE(memberId.length).string(memberId);\n\n  return encodeRequestWithLength(request.make());\n}\n\nfunction decodeLeaveGroupResponse (resp) {\n  var error = null;\n  Binary.parse(resp).word32bs('size').word32bs('correlationId').word16bs('errorCode').tap(function (vars) {\n    error = createGroupError(vars.errorCode);\n  });\n  return error;\n}\n\n// {\n//   name: '', // string\n//   subscription: [/* topics */],\n//   version: 0, // integer\n//   userData: {} //arbitary\n// }\n\n/*\nJoinGroupRequest => GroupId SessionTimeout MemberId ProtocolType GroupProtocols\n  GroupId => string\n  SessionTimeout => int32\n  MemberId => string\n  ProtocolType => string\n  GroupProtocols => [ProtocolName ProtocolMetadata]\n    ProtocolName => string\n    ProtocolMetadata => bytes\n*/\n\nfunction encodeJoinGroupRequest (clientId, correlationId, groupId, memberId, sessionTimeout, groupProtocols) {\n  var request = encodeRequestHeader(clientId, correlationId, REQUEST_TYPE.joinGroup);\n  request\n    .Int16BE(groupId.length)\n    .string(groupId)\n    .Int32BE(sessionTimeout)\n    .Int16BE(memberId.length)\n    .string(memberId)\n    .Int16BE(GROUPS_PROTOCOL_TYPE.length)\n    .string(GROUPS_PROTOCOL_TYPE)\n    .Int32BE(groupProtocols.length);\n\n  groupProtocols.forEach(encodeGroupProtocol.bind(request));\n\n  return encodeRequestWithLength(request.make());\n}\n\n/*\n\nv0 and v1 supported in 0.9.0 and greater\nJoinGroupResponse => ErrorCode GenerationId GroupProtocol LeaderId MemberId Members\n  ErrorCode => int16\n  GenerationId => int32\n  GroupProtocol => string\n  LeaderId => string\n  MemberId => string\n  Members => [MemberId MemberMetadata]\n    MemberId => string\n    MemberMetadata => bytes\n*/\nfunction decodeJoinGroupResponse (resp) {\n  var result = {\n    members: []\n  };\n\n  var error;\n\n  Binary.parse(resp)\n    .word32bs('size')\n    .word32bs('correlationId')\n    .word16bs('errorCode')\n    .tap(function (vars) {\n      error = createGroupError(vars.errorCode);\n    })\n    .word32bs('generationId')\n    .tap(function (vars) {\n      result.generationId = vars.generationId;\n    })\n    .word16bs('groupProtocol')\n    .tap(function (vars) {\n      this.buffer('groupProtocol', vars.groupProtocol);\n      result.groupProtocol = vars.groupProtocol = vars.groupProtocol.toString();\n    })\n    .word16bs('leaderId')\n    .tap(function (vars) {\n      this.buffer('leaderId', vars.leaderId);\n      result.leaderId = vars.leaderId = vars.leaderId.toString();\n    })\n    .word16bs('memberId')\n    .tap(function (vars) {\n      this.buffer('memberId', vars.memberId);\n      result.memberId = vars.memberId = vars.memberId.toString();\n    })\n    .word32bs('memberNum')\n    .loop(function (end, vars) {\n      if (error) {\n        return end();\n      }\n\n      if (vars.memberNum-- === 0) return end();\n      var memberMetadata;\n      this.word16bs('groupMemberId')\n        .tap(function (vars) {\n          this.buffer('groupMemberId', vars.groupMemberId);\n          vars.memberId = vars.groupMemberId.toString();\n        })\n        .word32bs('memberMetadata')\n        .tap(function (vars) {\n          if (vars.memberMetadata > -1) {\n            this.buffer('memberMetadata', vars.memberMetadata);\n            memberMetadata = decodeGroupData(this.vars.memberMetadata);\n            memberMetadata.id = vars.memberId;\n            result.members.push(memberMetadata);\n          }\n        });\n    });\n\n  return error || result;\n}\n\nfunction decodeGroupData (resp) {\n  var topics = [];\n  var parsed = Binary.parse(resp)\n    .word16bs('version')\n    .word32bs('subscriptionNum')\n    .loop(function decodeSubscription (end, vars) {\n      if (vars.subscriptionNum-- === 0) return end();\n      this.word16bs('topic').tap(function () {\n        this.buffer('topic', vars.topic);\n        topics.push(vars.topic.toString());\n      });\n    })\n    .word32bs('userData')\n    .tap(function (vars) {\n      if (vars.userData === -1) {\n        vars.userData = undefined;\n        return;\n      }\n      this.buffer('userData', vars.userData);\n      try {\n        vars.userData = JSON.parse(vars.userData.toString());\n      } catch (error) {\n        vars.userData = 'JSON parse error';\n      }\n    }).vars;\n\n  return {\n    subscription: topics,\n    version: parsed.version,\n    userData: parsed.userData\n  };\n}\n\nfunction encodeDescribeGroups (clientId, correlationId, groups) {\n  const request = encodeRequestHeader(clientId, correlationId, REQUEST_TYPE.describeGroups);\n\n  request.Int32BE(groups.length);\n  groups.forEach(groupId => {\n    request.Int16BE(groupId.length).string(groupId);\n  });\n\n  return encodeRequestWithLength(request.make());\n}\n\nfunction decodeDescribeGroups (resp) {\n  let results = {};\n  let error;\n\n  Binary.parse(resp).word32bs('size').word32bs('correlationId').word32bs('describeNum').loop(decodeDescriptions);\n\n  function decodeDescriptions (end, vars) {\n    if (vars.describeNum-- === 0) return end();\n\n    let described = { members: [] };\n    this.word16bs('errorCode')\n      .tap(vars => {\n        error = createGroupError(vars.errorCode);\n      })\n      .word16bs('groupId')\n      .tap(vars => {\n        this.buffer('groupId', vars.groupId);\n        described.groupId = vars.groupId.toString();\n      })\n      .word16bs('state')\n      .tap(vars => {\n        this.buffer('state', vars.state);\n        described.state = vars.state.toString();\n      })\n      .word16bs('protocolType')\n      .tap(vars => {\n        this.buffer('protocolType', vars.protocolType);\n        described.protocolType = vars.protocolType.toString();\n      })\n      .word16bs('protocol')\n      .tap(vars => {\n        this.buffer('protocol', vars.protocol);\n        described.protocol = vars.protocol.toString();\n\n        // keep this for error cases\n        results[described.groupId] = described;\n      })\n      .word32bs('membersNum')\n      .loop(function decodeGroupMembers (end, vars) {\n        if (vars.membersNum-- === 0) return end();\n        let member = {};\n\n        this.word16bs('memberId')\n          .tap(vars => {\n            this.buffer('memberId', vars.memberId);\n            member.memberId = vars.memberId.toString();\n          })\n          .word16bs('clientId')\n          .tap(vars => {\n            this.buffer('clientId', vars.clientId);\n            member.clientId = vars.clientId.toString();\n          })\n          .word16bs('clientHost')\n          .tap(vars => {\n            this.buffer('clientHost', vars.clientHost);\n            member.clientHost = vars.clientHost.toString();\n          })\n          .word32bs('memberMetadata')\n          .tap(vars => {\n            if (vars.memberMetadata > -1) {\n              this.buffer('memberMetadata', vars.memberMetadata);\n              let memberMetadata = decodeGroupData(vars.memberMetadata);\n              memberMetadata.id = member.memberId;\n              member.memberMetadata = memberMetadata;\n            }\n          })\n          .word32bs('memberAssignment')\n          .tap(vars => {\n            this.buffer('memberAssignment', vars.memberAssignment);\n            member.memberAssignment = decodeMemberAssignment(vars.memberAssignment);\n            described.members.push(member);\n\n            results[described.groupId] = described;\n          });\n      });\n  }\n\n  return error || results;\n}\n\nfunction encodeListGroups (clientId, correlationId) {\n  return encodeRequestWithLength(encodeRequestHeader(clientId, correlationId, REQUEST_TYPE.listGroups).make());\n}\n\nfunction decodeListGroups (resp) {\n  let groups = {};\n  let error;\n\n  Binary.parse(resp)\n    .word32bs('size')\n    .word32bs('correlationId')\n    .word16bs('errorCode')\n    .tap(vars => {\n      error = createGroupError(vars.errorCode);\n    })\n    .word32bs('groupNum')\n    .loop(function (end, vars) {\n      if (vars.groupNum-- === 0) return end();\n\n      this.word16bs('groupId')\n        .tap(function (vars) {\n          this.buffer('groupId', vars.groupId);\n          vars.groupId = vars.groupId.toString();\n        })\n        .word16bs('protocolType')\n        .tap(function (vars) {\n          this.buffer('protocolType', vars.protocolType);\n          groups[vars.groupId] = vars.protocolType.toString();\n        });\n    });\n\n  return error || groups;\n}\n\nfunction encodeVersionsRequest (clientId, correlationId) {\n  return encodeRequestWithLength(encodeRequestHeader(clientId, correlationId, REQUEST_TYPE.apiVersions).make());\n}\n\nfunction decodeVersionsResponse (resp) {\n  const MAX_SUPPORT_VERSION = require('./protocolVersions').maxSupport;\n  const versions = Object.create(null);\n  let error = null;\n\n  Binary.parse(resp)\n    .word32bs('size')\n    .word32bs('correlationId')\n    .word16bs('errorCode')\n    .tap(function (vars) {\n      error = createGroupError(vars.errorCode);\n    })\n    .word32bs('apiNum')\n    .loop(function (end, vars) {\n      if (vars.apiNum-- === 0 || error) return end();\n\n      let apiKey, minVersion, maxVersion;\n\n      this.word16bs('apiKey')\n        .tap(vars => {\n          apiKey = vars.apiKey;\n        })\n        .word16bs('minVersion')\n        .tap(vars => {\n          minVersion = vars.minVersion;\n        })\n        .word16bs('maxVersion')\n        .tap(vars => {\n          maxVersion = vars.maxVersion;\n        });\n\n      const apiName = apiKey in API_KEY_TO_NAME ? API_KEY_TO_NAME[apiKey] : apiKey;\n\n      versions[apiName] = {\n        min: minVersion,\n        max: maxVersion,\n        usable: MAX_SUPPORT_VERSION[apiName] != null ? Math.min(MAX_SUPPORT_VERSION[apiName], maxVersion) : false\n      };\n    });\n  return error || versions;\n}\n\nfunction encodeDescribeConfigsRequest (clientId, correlationId, payload) {\n  return _encodeDescribeConfigsRequest(clientId, correlationId, payload, 0);\n}\n\nfunction encodeDescribeConfigsRequestV1 (clientId, correlationId, payload) {\n  return _encodeDescribeConfigsRequest(clientId, correlationId, payload, 1);\n}\n\nfunction encodeDescribeConfigsRequestV2 (clientId, correlationId, payload) {\n  return _encodeDescribeConfigsRequest(clientId, correlationId, payload, 2);\n}\n\nfunction _encodeDescribeConfigsRequest (clientId, correlationId, payload, apiVersion) {\n  let request = encodeRequestHeader(clientId, correlationId, REQUEST_TYPE.describeConfigs, apiVersion);\n  const resources = payload.resources;\n  request.Int32BE(resources.length);\n  resources.forEach(function (resource) {\n    request.Int8(resource.resourceType);\n    request.Int16BE(resource.resourceName.length);\n    request.string(resource.resourceName);\n    if (resource.configNames === null || (Array.isArray(resource.configNames) && resource.configNames.length === 0)) {\n      request.Int32BE(-1); // -1 will fetch all config entries for the resource\n    } else {\n      request.Int32BE(resource.configNames.length);\n      resource.configNames.forEach(function (configName) {\n        request.Int16BE(configName.length).string(configName);\n      });\n    }\n  });\n  if (apiVersion > 0) {\n    request.Int8(payload.includeSynonyms || 0);\n  }\n\n  return encodeRequestWithLength(request.make());\n}\n\nfunction decodeDescribeConfigsResponse (resp) {\n  return _decodeDescribeConfigsResponse(resp, 0);\n}\n\nfunction decodeDescribeConfigsResponseV1 (resp) {\n  return _decodeDescribeConfigsResponse(resp, 1);\n}\n\nfunction decodeDescribeConfigsResponseV2 (resp) {\n  return _decodeDescribeConfigsResponse(resp, 2);\n}\n\nfunction _decodeDescribeConfigsResponse (resp, apiVersion) {\n  let resources = [];\n  let error;\n  Binary.parse(resp)\n    .word32bs('size')\n    .word32bs('correlationId')\n    .word32bs('throttleTime')\n    .word32bs('resourceNum')\n    .loop(decodeResources);\n\n  function decodeResources (end, vars) {\n    if (vars.resourceNum-- === 0) return end();\n    let resource = { configEntries: [] };\n\n    this.word16bs('errorCode')\n      .word16bs('errorMessage')\n      .tap(function (vars) {\n        if (vars.errorCode !== 0) {\n          if (vars.errorMessage === -1) {\n            vars.errorMessage = '';\n          } else {\n            this.buffer('errorMessage', vars.errorMessage);\n            vars.errorMessage = vars.errorMessage.toString();\n          }\n          error = vars.errorCode === 42 ? new InvalidRequestError(vars.errorMessage) : createGroupError(vars.errorCode);\n        }\n      })\n      .word8bs('resourceType')\n      .word16bs('resourceName')\n      .tap(function (vars) {\n        this.buffer('resourceName', vars.resourceName);\n        resource.resourceType = vars.resourceType.toString();\n        resource.resourceName = vars.resourceName.toString();\n      })\n      .word32bs('configEntriesNum')\n      .loop(decodeConfigEntries)\n      .tap(function () {\n        resources.push(resource);\n      });\n\n    function decodeConfigEntries (end, vars) {\n      if (vars.configEntriesNum === -1 || vars.configEntriesNum-- === 0) return end();\n      let configEntry = { synonyms: [] };\n\n      this.word16bs('configName')\n        .tap(function (vars) {\n          this.buffer('configName', vars.configName);\n          configEntry.configName = vars.configName.toString();\n        })\n        .word16bs('configValue')\n        .tap(function (vars) {\n          if (vars.configValue === -1) {\n            vars.configValue = '';\n          } else {\n            this.buffer('configValue', vars.configValue);\n            vars.configValue = vars.configValue.toString();\n          }\n          configEntry.configValue = vars.configValue;\n        })\n        .word8bs('readOnly')\n        .word8bs('configSource')\n        .word8bs('isSensitive')\n        .tap(function () {\n          if (apiVersion > 0) {\n            this.word32bs('configSynonymsNum');\n            this.loop(decodeConfigSynonyms);\n          }\n        })\n        .tap(function (vars) {\n          configEntry.readOnly = Boolean(vars.readOnly);\n          configEntry.configSource = vars.configSource;\n          configEntry.isSensitive = Boolean(vars.isSensitive);\n          resource.configEntries.push(configEntry);\n        });\n\n      function decodeConfigSynonyms (end, vars) {\n        if (vars.configSynonymsNum === -1 || vars.configSynonymsNum-- === 0) return end();\n        let configSynonym = {};\n        this.word16bs('configSynonymName')\n          .tap(function (vars) {\n            this.buffer('configSynonymName', vars.configSynonymName);\n            configSynonym.configSynonymName = vars.configSynonymName.toString();\n          })\n          .word16bs('configSynonymValue')\n          .tap(function (vars) {\n            if (vars.configSynonymValue === -1) {\n              configSynonym.configSynonymValue = '';\n            } else {\n              this.buffer('configSynonymValue', vars.configSynonymValue);\n              configSynonym.configSynonymValue = vars.configSynonymValue.toString();\n            }\n          })\n          .word8bs('configSynonymSource')\n          .tap(function () {\n            configSynonym.configSynonymSource = vars.configSynonymSource.toString();\n            configEntry.synonyms.push(configSynonym);\n          });\n      }\n    }\n  }\n  return error || resources;\n}\n\nexports.encodeSaslHandshakeRequest = encodeSaslHandshakeRequest;\nexports.decodeSaslHandshakeResponse = decodeSaslHandshakeResponse;\nexports.encodeSaslAuthenticateRequest = encodeSaslAuthenticateRequest;\nexports.decodeSaslAuthenticateResponse = decodeSaslAuthenticateResponse;\n\nexports.encodeFetchRequest = encodeFetchRequest;\nexports.decodeFetchResponse = decodeFetchResponse;\nexports.encodeFetchRequestV1 = encodeFetchRequestV1;\nexports.decodeFetchResponseV1 = decodeFetchResponseV1;\nexports.encodeFetchRequestV2 = encodeFetchRequestV2;\n\nexports.encodeOffsetCommitRequest = encodeOffsetCommitRequest;\nexports.encodeOffsetCommitV1Request = encodeOffsetCommitV1Request;\nexports.encodeOffsetCommitV2Request = encodeOffsetCommitV2Request;\nexports.decodeOffsetCommitResponse = decodeOffsetCommitResponse;\n\nexports.encodeOffsetFetchRequest = encodeOffsetFetchRequest;\nexports.encodeOffsetFetchV1Request = encodeOffsetFetchV1Request;\nexports.decodeOffsetFetchResponse = decodeOffsetFetchResponse;\nexports.decodeOffsetFetchV1Response = decodeOffsetFetchV1Response;\nexports.encodeMetadataRequest = encodeMetadataRequest;\nexports.decodeMetadataResponse = decodeMetadataResponse;\nexports.encodeMetadataV1Request = encodeMetadataV1Request;\nexports.decodeMetadataV1Response = decodeMetadataV1Response;\n\nexports.encodeCreateTopicRequest = encodeCreateTopicRequest;\nexports.encodeCreateTopicRequestV1 = encodeCreateTopicRequestV1;\nexports.decodeCreateTopicResponse = decodeCreateTopicResponse;\nexports.decodeCreateTopicResponseV1 = decodeCreateTopicResponseV1;\n\nexports.encodeProduceRequest = encodeProduceRequest;\nexports.encodeProduceV1Request = encodeProduceV1Request;\nexports.encodeProduceV2Request = encodeProduceV2Request;\nexports.decodeProduceResponse = decodeProduceResponse;\nexports.decodeProduceV1Response = decodeProduceV1Response;\nexports.decodeProduceV2Response = decodeProduceV2Response;\n\nexports.encodeOffsetRequest = encodeOffsetRequest;\nexports.decodeOffsetResponse = decodeOffsetResponse;\nexports.encodeMessageSet = encodeMessageSet;\nexports.encodeJoinGroupRequest = encodeJoinGroupRequest;\nexports.decodeJoinGroupResponse = decodeJoinGroupResponse;\nexports.encodeGroupCoordinatorRequest = encodeGroupCoordinatorRequest;\nexports.decodeGroupCoordinatorResponse = decodeGroupCoordinatorResponse;\nexports.encodeGroupHeartbeatRequest = encodeGroupHeartbeatRequest;\nexports.decodeGroupHeartbeatResponse = decodeGroupHeartbeatResponse;\nexports.encodeSyncGroupRequest = encodeSyncGroupRequest;\nexports.decodeSyncGroupResponse = decodeSyncGroupResponse;\nexports.encodeLeaveGroupRequest = encodeLeaveGroupRequest;\nexports.decodeLeaveGroupResponse = decodeLeaveGroupResponse;\nexports.encodeDescribeGroups = encodeDescribeGroups;\nexports.decodeDescribeGroups = decodeDescribeGroups;\nexports.encodeListGroups = encodeListGroups;\nexports.decodeListGroups = decodeListGroups;\nexports.encodeVersionsRequest = encodeVersionsRequest;\nexports.decodeVersionsResponse = decodeVersionsResponse;\nexports.encodeDescribeConfigsRequest = encodeDescribeConfigsRequest;\nexports.encodeDescribeConfigsRequestV1 = encodeDescribeConfigsRequestV1;\nexports.encodeDescribeConfigsRequestV2 = encodeDescribeConfigsRequestV2;\nexports.decodeDescribeConfigsResponse = decodeDescribeConfigsResponse;\nexports.decodeDescribeConfigsResponseV1 = decodeDescribeConfigsResponseV1;\nexports.decodeDescribeConfigsResponseV2 = decodeDescribeConfigsResponseV2;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}