{"ast":null,"code":"'use strict';\n\nconst Writable = require('stream').Writable;\nconst KafkaClient = require('./kafkaClient');\nconst HighLevelProducer = require('./highLevelProducer');\nconst logger = require('./logging')('kafka-node:ProducerStream');\nconst _ = require('lodash');\nconst DEFAULTS = {\n  kafkaClient: {\n    kafkaHost: '127.0.0.1:9092'\n  },\n  producer: {\n    partitionerType: 3\n  }\n};\nconst DEFAULT_HIGH_WATER_MARK = 100;\nclass ProducerStream extends Writable {\n  constructor(options) {\n    if (options == null) {\n      options = {};\n    }\n    super({\n      objectMode: true,\n      decodeStrings: false,\n      highWaterMark: options.highWaterMark || DEFAULT_HIGH_WATER_MARK\n    });\n    _.defaultsDeep(options, DEFAULTS);\n    this.client = new KafkaClient(options.kafkaClient);\n    this.producer = new HighLevelProducer(this.client, options.producer, options.producer.customPartitioner);\n    this.producer.on('error', error => this.emit('error', error));\n  }\n  sendPayload(payload, callback) {\n    if (!_.isArray(payload)) {\n      payload = [payload];\n    }\n    if (!this.producer.ready) {\n      this.producer.once('ready', () => this.producer.send(payload, callback));\n    } else {\n      this.producer.send(payload, callback);\n    }\n  }\n  close(callback) {\n    this.producer.close(callback);\n  }\n  _write(message, encoding, callback) {\n    logger.debug('_write');\n    this.sendPayload(message, callback);\n  }\n  _writev(chunks, callback) {\n    logger.debug('_writev');\n    const payload = _.map(chunks, 'chunk');\n    this.sendPayload(payload, callback);\n  }\n}\nmodule.exports = ProducerStream;","map":{"version":3,"names":["Writable","require","KafkaClient","HighLevelProducer","logger","_","DEFAULTS","kafkaClient","kafkaHost","producer","partitionerType","DEFAULT_HIGH_WATER_MARK","ProducerStream","constructor","options","objectMode","decodeStrings","highWaterMark","defaultsDeep","client","customPartitioner","on","error","emit","sendPayload","payload","callback","isArray","ready","once","send","close","_write","message","encoding","debug","_writev","chunks","map","module","exports"],"sources":["D:/Project/VUEJSSPRING_CRUD_JWT/vue-crud-api-jwt-vuex/node_modules/kafka-node/lib/producerStream.js"],"sourcesContent":["'use strict';\n\nconst Writable = require('stream').Writable;\nconst KafkaClient = require('./kafkaClient');\nconst HighLevelProducer = require('./highLevelProducer');\nconst logger = require('./logging')('kafka-node:ProducerStream');\nconst _ = require('lodash');\n\nconst DEFAULTS = {\n  kafkaClient: {\n    kafkaHost: '127.0.0.1:9092'\n  },\n  producer: {\n    partitionerType: 3\n  }\n};\n\nconst DEFAULT_HIGH_WATER_MARK = 100;\n\nclass ProducerStream extends Writable {\n  constructor (options) {\n    if (options == null) {\n      options = {};\n    }\n\n    super({ objectMode: true, decodeStrings: false, highWaterMark: options.highWaterMark || DEFAULT_HIGH_WATER_MARK });\n\n    _.defaultsDeep(options, DEFAULTS);\n\n    this.client = new KafkaClient(options.kafkaClient);\n    this.producer = new HighLevelProducer(this.client, options.producer, options.producer.customPartitioner);\n    this.producer.on('error', error => this.emit('error', error));\n  }\n\n  sendPayload (payload, callback) {\n    if (!_.isArray(payload)) {\n      payload = [payload];\n    }\n    if (!this.producer.ready) {\n      this.producer.once('ready', () => this.producer.send(payload, callback));\n    } else {\n      this.producer.send(payload, callback);\n    }\n  }\n\n  close (callback) {\n    this.producer.close(callback);\n  }\n\n  _write (message, encoding, callback) {\n    logger.debug('_write');\n    this.sendPayload(message, callback);\n  }\n\n  _writev (chunks, callback) {\n    logger.debug('_writev');\n    const payload = _.map(chunks, 'chunk');\n    this.sendPayload(payload, callback);\n  }\n}\n\nmodule.exports = ProducerStream;\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,QAAQ,GAAGC,OAAO,CAAC,QAAQ,CAAC,CAACD,QAAQ;AAC3C,MAAME,WAAW,GAAGD,OAAO,CAAC,eAAe,CAAC;AAC5C,MAAME,iBAAiB,GAAGF,OAAO,CAAC,qBAAqB,CAAC;AACxD,MAAMG,MAAM,GAAGH,OAAO,CAAC,WAAW,CAAC,CAAC,2BAA2B,CAAC;AAChE,MAAMI,CAAC,GAAGJ,OAAO,CAAC,QAAQ,CAAC;AAE3B,MAAMK,QAAQ,GAAG;EACfC,WAAW,EAAE;IACXC,SAAS,EAAE;EACb,CAAC;EACDC,QAAQ,EAAE;IACRC,eAAe,EAAE;EACnB;AACF,CAAC;AAED,MAAMC,uBAAuB,GAAG,GAAG;AAEnC,MAAMC,cAAc,SAASZ,QAAQ,CAAC;EACpCa,WAAWA,CAAEC,OAAO,EAAE;IACpB,IAAIA,OAAO,IAAI,IAAI,EAAE;MACnBA,OAAO,GAAG,CAAC,CAAC;IACd;IAEA,KAAK,CAAC;MAAEC,UAAU,EAAE,IAAI;MAAEC,aAAa,EAAE,KAAK;MAAEC,aAAa,EAAEH,OAAO,CAACG,aAAa,IAAIN;IAAwB,CAAC,CAAC;IAElHN,CAAC,CAACa,YAAY,CAACJ,OAAO,EAAER,QAAQ,CAAC;IAEjC,IAAI,CAACa,MAAM,GAAG,IAAIjB,WAAW,CAACY,OAAO,CAACP,WAAW,CAAC;IAClD,IAAI,CAACE,QAAQ,GAAG,IAAIN,iBAAiB,CAAC,IAAI,CAACgB,MAAM,EAAEL,OAAO,CAACL,QAAQ,EAAEK,OAAO,CAACL,QAAQ,CAACW,iBAAiB,CAAC;IACxG,IAAI,CAACX,QAAQ,CAACY,EAAE,CAAC,OAAO,EAAEC,KAAK,IAAI,IAAI,CAACC,IAAI,CAAC,OAAO,EAAED,KAAK,CAAC,CAAC;EAC/D;EAEAE,WAAWA,CAAEC,OAAO,EAAEC,QAAQ,EAAE;IAC9B,IAAI,CAACrB,CAAC,CAACsB,OAAO,CAACF,OAAO,CAAC,EAAE;MACvBA,OAAO,GAAG,CAACA,OAAO,CAAC;IACrB;IACA,IAAI,CAAC,IAAI,CAAChB,QAAQ,CAACmB,KAAK,EAAE;MACxB,IAAI,CAACnB,QAAQ,CAACoB,IAAI,CAAC,OAAO,EAAE,MAAM,IAAI,CAACpB,QAAQ,CAACqB,IAAI,CAACL,OAAO,EAAEC,QAAQ,CAAC,CAAC;IAC1E,CAAC,MAAM;MACL,IAAI,CAACjB,QAAQ,CAACqB,IAAI,CAACL,OAAO,EAAEC,QAAQ,CAAC;IACvC;EACF;EAEAK,KAAKA,CAAEL,QAAQ,EAAE;IACf,IAAI,CAACjB,QAAQ,CAACsB,KAAK,CAACL,QAAQ,CAAC;EAC/B;EAEAM,MAAMA,CAAEC,OAAO,EAAEC,QAAQ,EAAER,QAAQ,EAAE;IACnCtB,MAAM,CAAC+B,KAAK,CAAC,QAAQ,CAAC;IACtB,IAAI,CAACX,WAAW,CAACS,OAAO,EAAEP,QAAQ,CAAC;EACrC;EAEAU,OAAOA,CAAEC,MAAM,EAAEX,QAAQ,EAAE;IACzBtB,MAAM,CAAC+B,KAAK,CAAC,SAAS,CAAC;IACvB,MAAMV,OAAO,GAAGpB,CAAC,CAACiC,GAAG,CAACD,MAAM,EAAE,OAAO,CAAC;IACtC,IAAI,CAACb,WAAW,CAACC,OAAO,EAAEC,QAAQ,CAAC;EACrC;AACF;AAEAa,MAAM,CAACC,OAAO,GAAG5B,cAAc"},"metadata":{},"sourceType":"script","externalDependencies":[]}