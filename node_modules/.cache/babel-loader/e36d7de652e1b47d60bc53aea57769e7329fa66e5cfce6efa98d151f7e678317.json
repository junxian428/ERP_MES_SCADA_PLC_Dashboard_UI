{"ast":null,"code":"'use strict';\n\nconst retry = require('retry');\nconst logger = require('./logging')('kafka-node:ConsumerGroupRecovery');\nconst assert = require('assert');\nconst _ = require('lodash');\nconst GroupCoordinatorNotAvailable = require('./errors/GroupCoordinatorNotAvailableError');\nconst NotCoordinatorForGroup = require('./errors/NotCoordinatorForGroupError');\nconst IllegalGeneration = require('./errors/IllegalGenerationError');\nconst GroupLoadInProgress = require('./errors/GroupLoadInProgressError');\nconst UnknownMemberId = require('./errors/UnknownMemberIdError');\nconst RebalanceInProgress = require('./errors/RebalanceInProgressError');\nconst HeartbeatTimeout = require('./errors/HeartbeatTimeoutError');\nconst TimeoutError = require('./errors/TimeoutError');\nconst BrokerNotAvailableError = require('./errors').BrokerNotAvailableError;\nconst NETWORK_ERROR_CODES = ['ETIMEDOUT', 'ECONNRESET', 'ESOCKETTIMEDOUT', 'ECONNREFUSED', 'EHOSTUNREACH', 'EADDRNOTAVAIL'];\nconst recoverableErrors = [{\n  errors: [GroupCoordinatorNotAvailable, IllegalGeneration, GroupLoadInProgress, RebalanceInProgress, HeartbeatTimeout, TimeoutError]\n}, {\n  errors: [NotCoordinatorForGroup, BrokerNotAvailableError],\n  handler: function () {\n    delete this.client.coordinatorId;\n  }\n}, {\n  errors: [UnknownMemberId],\n  handler: function () {\n    this.memberId = null;\n  }\n}];\nfunction isErrorInstanceOf(error, errors) {\n  return errors.some(function (errorClass) {\n    return error instanceof errorClass;\n  });\n}\nfunction ConsumerGroupRecovery(consumerGroup) {\n  this.consumerGroup = consumerGroup;\n  this.options = consumerGroup.options;\n}\nfunction isNetworkError(error) {\n  if (error && error.code && error.errno) {\n    return _.includes(NETWORK_ERROR_CODES, error.code);\n  }\n  return false;\n}\nConsumerGroupRecovery.prototype.tryToRecoverFrom = function (error, source) {\n  logger.debug('tryToRecoverFrom', source, error);\n  this.consumerGroup.ready = false;\n  this.consumerGroup.stopHeartbeats();\n  var retryTimeout = false;\n  var retry = isNetworkError(error) || recoverableErrors.some(function (recoverableItem) {\n    if (isErrorInstanceOf(error, recoverableItem.errors)) {\n      recoverableItem.handler && recoverableItem.handler.call(this.consumerGroup, error);\n      return true;\n    }\n    return false;\n  }, this);\n  if (retry) {\n    retryTimeout = this.getRetryTimeout(error);\n  }\n  if (retry && retryTimeout) {\n    logger.debug('RECOVERY from %s: %s retrying in %s ms', source, this.consumerGroup.client.clientId, retryTimeout, error);\n    this.consumerGroup.scheduleReconnect(retryTimeout);\n  } else {\n    this.consumerGroup.emit('error', error);\n  }\n  this.lastError = error;\n};\nConsumerGroupRecovery.prototype.clearError = function () {\n  this.lastError = null;\n};\nConsumerGroupRecovery.prototype.getRetryTimeout = function (error) {\n  assert(error);\n  if (!this._timeouts) {\n    this._timeouts = retry.timeouts({\n      retries: this.options.retries,\n      factor: this.options.retryFactor,\n      minTimeout: this.options.retryMinTimeout\n    });\n  }\n  if (this._retryIndex == null || this.lastError == null || error.errorCode !== this.lastError.errorCode) {\n    this._retryIndex = 0;\n  }\n  var index = this._retryIndex++;\n  if (index >= this._timeouts.length) {\n    return false;\n  }\n  return this._timeouts[index];\n};\nmodule.exports = ConsumerGroupRecovery;","map":{"version":3,"names":["retry","require","logger","assert","_","GroupCoordinatorNotAvailable","NotCoordinatorForGroup","IllegalGeneration","GroupLoadInProgress","UnknownMemberId","RebalanceInProgress","HeartbeatTimeout","TimeoutError","BrokerNotAvailableError","NETWORK_ERROR_CODES","recoverableErrors","errors","handler","client","coordinatorId","memberId","isErrorInstanceOf","error","some","errorClass","ConsumerGroupRecovery","consumerGroup","options","isNetworkError","code","errno","includes","prototype","tryToRecoverFrom","source","debug","ready","stopHeartbeats","retryTimeout","recoverableItem","call","getRetryTimeout","clientId","scheduleReconnect","emit","lastError","clearError","_timeouts","timeouts","retries","factor","retryFactor","minTimeout","retryMinTimeout","_retryIndex","errorCode","index","length","module","exports"],"sources":["D:/Project/VUEJSSPRING_CRUD_JWT/vue-crud-api-jwt-vuex/node_modules/kafka-node/lib/consumerGroupRecovery.js"],"sourcesContent":["'use strict';\n\nconst retry = require('retry');\nconst logger = require('./logging')('kafka-node:ConsumerGroupRecovery');\nconst assert = require('assert');\nconst _ = require('lodash');\n\nconst GroupCoordinatorNotAvailable = require('./errors/GroupCoordinatorNotAvailableError');\nconst NotCoordinatorForGroup = require('./errors/NotCoordinatorForGroupError');\nconst IllegalGeneration = require('./errors/IllegalGenerationError');\nconst GroupLoadInProgress = require('./errors/GroupLoadInProgressError');\nconst UnknownMemberId = require('./errors/UnknownMemberIdError');\nconst RebalanceInProgress = require('./errors/RebalanceInProgressError');\nconst HeartbeatTimeout = require('./errors/HeartbeatTimeoutError');\nconst TimeoutError = require('./errors/TimeoutError');\nconst BrokerNotAvailableError = require('./errors').BrokerNotAvailableError;\n\nconst NETWORK_ERROR_CODES = [\n  'ETIMEDOUT',\n  'ECONNRESET',\n  'ESOCKETTIMEDOUT',\n  'ECONNREFUSED',\n  'EHOSTUNREACH',\n  'EADDRNOTAVAIL'\n];\n\nconst recoverableErrors = [\n  {\n    errors: [\n      GroupCoordinatorNotAvailable,\n      IllegalGeneration,\n      GroupLoadInProgress,\n      RebalanceInProgress,\n      HeartbeatTimeout,\n      TimeoutError\n    ]\n  },\n  {\n    errors: [NotCoordinatorForGroup, BrokerNotAvailableError],\n    handler: function () {\n      delete this.client.coordinatorId;\n    }\n  },\n  {\n    errors: [UnknownMemberId],\n    handler: function () {\n      this.memberId = null;\n    }\n  }\n];\n\nfunction isErrorInstanceOf (error, errors) {\n  return errors.some(function (errorClass) {\n    return error instanceof errorClass;\n  });\n}\n\nfunction ConsumerGroupRecovery (consumerGroup) {\n  this.consumerGroup = consumerGroup;\n  this.options = consumerGroup.options;\n}\n\nfunction isNetworkError (error) {\n  if (error && error.code && error.errno) {\n    return _.includes(NETWORK_ERROR_CODES, error.code);\n  }\n  return false;\n}\n\nConsumerGroupRecovery.prototype.tryToRecoverFrom = function (error, source) {\n  logger.debug('tryToRecoverFrom', source, error);\n  this.consumerGroup.ready = false;\n  this.consumerGroup.stopHeartbeats();\n\n  var retryTimeout = false;\n  var retry =\n    isNetworkError(error) ||\n    recoverableErrors.some(function (recoverableItem) {\n      if (isErrorInstanceOf(error, recoverableItem.errors)) {\n        recoverableItem.handler && recoverableItem.handler.call(this.consumerGroup, error);\n        return true;\n      }\n      return false;\n    }, this);\n\n  if (retry) {\n    retryTimeout = this.getRetryTimeout(error);\n  }\n\n  if (retry && retryTimeout) {\n    logger.debug(\n      'RECOVERY from %s: %s retrying in %s ms',\n      source,\n      this.consumerGroup.client.clientId,\n      retryTimeout,\n      error\n    );\n    this.consumerGroup.scheduleReconnect(retryTimeout);\n  } else {\n    this.consumerGroup.emit('error', error);\n  }\n  this.lastError = error;\n};\n\nConsumerGroupRecovery.prototype.clearError = function () {\n  this.lastError = null;\n};\n\nConsumerGroupRecovery.prototype.getRetryTimeout = function (error) {\n  assert(error);\n  if (!this._timeouts) {\n    this._timeouts = retry.timeouts({\n      retries: this.options.retries,\n      factor: this.options.retryFactor,\n      minTimeout: this.options.retryMinTimeout\n    });\n  }\n\n  if (this._retryIndex == null || this.lastError == null || error.errorCode !== this.lastError.errorCode) {\n    this._retryIndex = 0;\n  }\n\n  var index = this._retryIndex++;\n  if (index >= this._timeouts.length) {\n    return false;\n  }\n  return this._timeouts[index];\n};\n\nmodule.exports = ConsumerGroupRecovery;\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,KAAK,GAAGC,OAAO,CAAC,OAAO,CAAC;AAC9B,MAAMC,MAAM,GAAGD,OAAO,CAAC,WAAW,CAAC,CAAC,kCAAkC,CAAC;AACvE,MAAME,MAAM,GAAGF,OAAO,CAAC,QAAQ,CAAC;AAChC,MAAMG,CAAC,GAAGH,OAAO,CAAC,QAAQ,CAAC;AAE3B,MAAMI,4BAA4B,GAAGJ,OAAO,CAAC,4CAA4C,CAAC;AAC1F,MAAMK,sBAAsB,GAAGL,OAAO,CAAC,sCAAsC,CAAC;AAC9E,MAAMM,iBAAiB,GAAGN,OAAO,CAAC,iCAAiC,CAAC;AACpE,MAAMO,mBAAmB,GAAGP,OAAO,CAAC,mCAAmC,CAAC;AACxE,MAAMQ,eAAe,GAAGR,OAAO,CAAC,+BAA+B,CAAC;AAChE,MAAMS,mBAAmB,GAAGT,OAAO,CAAC,mCAAmC,CAAC;AACxE,MAAMU,gBAAgB,GAAGV,OAAO,CAAC,gCAAgC,CAAC;AAClE,MAAMW,YAAY,GAAGX,OAAO,CAAC,uBAAuB,CAAC;AACrD,MAAMY,uBAAuB,GAAGZ,OAAO,CAAC,UAAU,CAAC,CAACY,uBAAuB;AAE3E,MAAMC,mBAAmB,GAAG,CAC1B,WAAW,EACX,YAAY,EACZ,iBAAiB,EACjB,cAAc,EACd,cAAc,EACd,eAAe,CAChB;AAED,MAAMC,iBAAiB,GAAG,CACxB;EACEC,MAAM,EAAE,CACNX,4BAA4B,EAC5BE,iBAAiB,EACjBC,mBAAmB,EACnBE,mBAAmB,EACnBC,gBAAgB,EAChBC,YAAY;AAEhB,CAAC,EACD;EACEI,MAAM,EAAE,CAACV,sBAAsB,EAAEO,uBAAuB,CAAC;EACzDI,OAAO,EAAE,SAAAA,CAAA,EAAY;IACnB,OAAO,IAAI,CAACC,MAAM,CAACC,aAAa;EAClC;AACF,CAAC,EACD;EACEH,MAAM,EAAE,CAACP,eAAe,CAAC;EACzBQ,OAAO,EAAE,SAAAA,CAAA,EAAY;IACnB,IAAI,CAACG,QAAQ,GAAG,IAAI;EACtB;AACF,CAAC,CACF;AAED,SAASC,iBAAiBA,CAAEC,KAAK,EAAEN,MAAM,EAAE;EACzC,OAAOA,MAAM,CAACO,IAAI,CAAC,UAAUC,UAAU,EAAE;IACvC,OAAOF,KAAK,YAAYE,UAAU;EACpC,CAAC,CAAC;AACJ;AAEA,SAASC,qBAAqBA,CAAEC,aAAa,EAAE;EAC7C,IAAI,CAACA,aAAa,GAAGA,aAAa;EAClC,IAAI,CAACC,OAAO,GAAGD,aAAa,CAACC,OAAO;AACtC;AAEA,SAASC,cAAcA,CAAEN,KAAK,EAAE;EAC9B,IAAIA,KAAK,IAAIA,KAAK,CAACO,IAAI,IAAIP,KAAK,CAACQ,KAAK,EAAE;IACtC,OAAO1B,CAAC,CAAC2B,QAAQ,CAACjB,mBAAmB,EAAEQ,KAAK,CAACO,IAAI,CAAC;EACpD;EACA,OAAO,KAAK;AACd;AAEAJ,qBAAqB,CAACO,SAAS,CAACC,gBAAgB,GAAG,UAAUX,KAAK,EAAEY,MAAM,EAAE;EAC1EhC,MAAM,CAACiC,KAAK,CAAC,kBAAkB,EAAED,MAAM,EAAEZ,KAAK,CAAC;EAC/C,IAAI,CAACI,aAAa,CAACU,KAAK,GAAG,KAAK;EAChC,IAAI,CAACV,aAAa,CAACW,cAAc,CAAC,CAAC;EAEnC,IAAIC,YAAY,GAAG,KAAK;EACxB,IAAItC,KAAK,GACP4B,cAAc,CAACN,KAAK,CAAC,IACrBP,iBAAiB,CAACQ,IAAI,CAAC,UAAUgB,eAAe,EAAE;IAChD,IAAIlB,iBAAiB,CAACC,KAAK,EAAEiB,eAAe,CAACvB,MAAM,CAAC,EAAE;MACpDuB,eAAe,CAACtB,OAAO,IAAIsB,eAAe,CAACtB,OAAO,CAACuB,IAAI,CAAC,IAAI,CAACd,aAAa,EAAEJ,KAAK,CAAC;MAClF,OAAO,IAAI;IACb;IACA,OAAO,KAAK;EACd,CAAC,EAAE,IAAI,CAAC;EAEV,IAAItB,KAAK,EAAE;IACTsC,YAAY,GAAG,IAAI,CAACG,eAAe,CAACnB,KAAK,CAAC;EAC5C;EAEA,IAAItB,KAAK,IAAIsC,YAAY,EAAE;IACzBpC,MAAM,CAACiC,KAAK,CACV,wCAAwC,EACxCD,MAAM,EACN,IAAI,CAACR,aAAa,CAACR,MAAM,CAACwB,QAAQ,EAClCJ,YAAY,EACZhB,KACF,CAAC;IACD,IAAI,CAACI,aAAa,CAACiB,iBAAiB,CAACL,YAAY,CAAC;EACpD,CAAC,MAAM;IACL,IAAI,CAACZ,aAAa,CAACkB,IAAI,CAAC,OAAO,EAAEtB,KAAK,CAAC;EACzC;EACA,IAAI,CAACuB,SAAS,GAAGvB,KAAK;AACxB,CAAC;AAEDG,qBAAqB,CAACO,SAAS,CAACc,UAAU,GAAG,YAAY;EACvD,IAAI,CAACD,SAAS,GAAG,IAAI;AACvB,CAAC;AAEDpB,qBAAqB,CAACO,SAAS,CAACS,eAAe,GAAG,UAAUnB,KAAK,EAAE;EACjEnB,MAAM,CAACmB,KAAK,CAAC;EACb,IAAI,CAAC,IAAI,CAACyB,SAAS,EAAE;IACnB,IAAI,CAACA,SAAS,GAAG/C,KAAK,CAACgD,QAAQ,CAAC;MAC9BC,OAAO,EAAE,IAAI,CAACtB,OAAO,CAACsB,OAAO;MAC7BC,MAAM,EAAE,IAAI,CAACvB,OAAO,CAACwB,WAAW;MAChCC,UAAU,EAAE,IAAI,CAACzB,OAAO,CAAC0B;IAC3B,CAAC,CAAC;EACJ;EAEA,IAAI,IAAI,CAACC,WAAW,IAAI,IAAI,IAAI,IAAI,CAACT,SAAS,IAAI,IAAI,IAAIvB,KAAK,CAACiC,SAAS,KAAK,IAAI,CAACV,SAAS,CAACU,SAAS,EAAE;IACtG,IAAI,CAACD,WAAW,GAAG,CAAC;EACtB;EAEA,IAAIE,KAAK,GAAG,IAAI,CAACF,WAAW,EAAE;EAC9B,IAAIE,KAAK,IAAI,IAAI,CAACT,SAAS,CAACU,MAAM,EAAE;IAClC,OAAO,KAAK;EACd;EACA,OAAO,IAAI,CAACV,SAAS,CAACS,KAAK,CAAC;AAC9B,CAAC;AAEDE,MAAM,CAACC,OAAO,GAAGlC,qBAAqB"},"metadata":{},"sourceType":"script","externalDependencies":[]}