{"ast":null,"code":"'use strict';\n\nrequire(\"core-js/modules/web.immediate.js\");\nrequire(\"core-js/modules/es.array.push.js\");\nvar util = require('util');\nvar _ = require('lodash');\nvar EventEmitter = require('events');\nvar logger = require('./logging')('kafka-node:Consumer');\nvar utils = require('./utils');\nvar DEFAULTS = {\n  groupId: 'kafka-node-group',\n  // Auto commit config\n  autoCommit: true,\n  autoCommitIntervalMs: 5000,\n  // Fetch message config\n  fetchMaxWaitMs: 100,\n  fetchMinBytes: 1,\n  fetchMaxBytes: 1024 * 1024,\n  fromOffset: false,\n  encoding: 'utf8'\n};\nvar nextId = function () {\n  var id = 0;\n  return function () {\n    return id++;\n  };\n}();\nfunction Consumer(client, topics, options) {\n  EventEmitter.call(this);\n  if (!topics) {\n    throw new Error('Must have payloads');\n  }\n  utils.validateTopics(topics);\n  this.fetchCount = 0;\n  this.client = client;\n  this.options = _.defaults(options || {}, DEFAULTS);\n  this.ready = false;\n  this.paused = this.options.paused;\n  this.id = nextId();\n  this.payloads = this.buildPayloads(topics);\n  this.connect();\n  this.encoding = this.options.encoding;\n  if (this.options.groupId) {\n    utils.validateConfig('options.groupId', this.options.groupId);\n  }\n}\nutil.inherits(Consumer, EventEmitter);\nConsumer.prototype.buildPayloads = function (payloads) {\n  var self = this;\n  return payloads.map(function (p) {\n    if (typeof p !== 'object') p = {\n      topic: p\n    };\n    p.partition = p.partition || 0;\n    p.offset = p.offset || 0;\n    p.maxBytes = self.options.fetchMaxBytes;\n    p.metadata = 'm'; // metadata can be arbitrary\n    return p;\n  });\n};\nConsumer.prototype.connect = function () {\n  var self = this;\n  // Client already exists\n  this.ready = this.client.ready;\n  if (this.ready) this.init();\n  this.client.on('ready', function () {\n    logger.debug('consumer ready');\n    if (!self.ready) self.init();\n    self.ready = true;\n  });\n  this.client.on('error', function (err) {\n    logger.error('client error %s', err.message);\n    self.emit('error', err);\n  });\n  this.client.on('close', function () {\n    logger.debug('connection closed');\n  });\n  this.client.on('brokersChanged', function () {\n    var topicNames = self.payloads.map(function (p) {\n      return p.topic;\n    });\n    this.refreshMetadata(topicNames, function (err) {\n      if (err) return self.emit('error', err);\n      self.fetch();\n    });\n  });\n  // 'done' will be emit when a message fetch request complete\n  this.on('done', function (topics) {\n    self.updateOffsets(topics);\n    setImmediate(function () {\n      self.fetch();\n    });\n  });\n};\nConsumer.prototype.init = function () {\n  if (!this.payloads.length) {\n    return;\n  }\n  var self = this;\n  var topics = self.payloads.map(function (p) {\n    return p.topic;\n  });\n  self.client.topicExists(topics, function (err) {\n    if (err) {\n      return self.emit('error', err);\n    }\n    if (self.options.fromOffset) {\n      return self.fetch();\n    }\n    self.fetchOffset(self.payloads, function (err, topics) {\n      if (err) {\n        return self.emit('error', err);\n      }\n      self.updateOffsets(topics, true);\n      self.fetch();\n    });\n  });\n};\n\n/*\n * Update offset info in current payloads\n * @param {Object} Topic-partition-offset\n * @param {Boolean} Don't commit when initing consumer\n */\nConsumer.prototype.updateOffsets = function (topics, initing) {\n  this.payloads.forEach(function (p) {\n    if (!_.isEmpty(topics[p.topic]) && topics[p.topic][p.partition] !== undefined) {\n      var offset = topics[p.topic][p.partition];\n      if (offset === -1) offset = 0;\n      if (!initing) p.offset = offset + 1;else p.offset = offset;\n    }\n  });\n  if (this.options.autoCommit && !initing) {\n    this.autoCommit(false, function (err) {\n      err && logger.debug('auto commit offset', err);\n    });\n  }\n};\nfunction autoCommit(force, cb) {\n  if (arguments.length === 1) {\n    cb = force;\n    force = false;\n  }\n  if (this.committing && !force) return cb(null, 'Offset committing');\n  this.committing = true;\n  setTimeout(function () {\n    this.committing = false;\n  }.bind(this), this.options.autoCommitIntervalMs);\n  var payloads = this.payloads;\n  if (this.pausedPayloads) payloads = payloads.concat(this.pausedPayloads);\n  var commits = payloads.filter(function (p) {\n    return p.offset !== 0;\n  });\n  if (commits.length) {\n    this.client.sendOffsetCommitRequest(this.options.groupId, commits, cb);\n  } else {\n    cb(null, 'Nothing to be committed');\n  }\n}\nConsumer.prototype.commit = Consumer.prototype.autoCommit = autoCommit;\nConsumer.prototype.fetch = function () {\n  if (!this.ready || this.paused) return;\n  this.client.sendFetchRequest(this, this.payloads, this.options.fetchMaxWaitMs, this.options.fetchMinBytes);\n};\nConsumer.prototype.fetchOffset = function (payloads, cb) {\n  this.client.sendOffsetFetchRequest(this.options.groupId, payloads, cb);\n};\nConsumer.prototype.addTopics = function (topics, cb, fromOffset) {\n  fromOffset = !!fromOffset;\n  var self = this;\n  if (!this.ready) {\n    setTimeout(function () {\n      self.addTopics(topics, cb, fromOffset);\n    }, 100);\n    return;\n  }\n\n  // The default is that the topics is a string array of topic names\n  var topicNames = topics;\n\n  // If the topics is actually an object and not string we assume it is an array of payloads\n  if (typeof topics[0] === 'object') {\n    topicNames = topics.map(function (p) {\n      return p.topic;\n    });\n  }\n  this.client.addTopics(topicNames, function (err, added) {\n    if (err) return cb && cb(err, added);\n    var payloads = self.buildPayloads(topics);\n    var reFetch = !self.payloads.length;\n    if (fromOffset) {\n      payloads.forEach(function (p) {\n        self.payloads.push(p);\n      });\n      if (reFetch) self.fetch();\n      cb && cb(null, added);\n      return;\n    }\n\n    // update offset of topics that will be added\n    self.fetchOffset(payloads, function (err, offsets) {\n      if (err) return cb(err);\n      payloads.forEach(function (p) {\n        var offset = offsets[p.topic][p.partition];\n        if (offset === -1) offset = 0;\n        p.offset = offset;\n        self.payloads.push(p);\n      });\n      if (reFetch) self.fetch();\n      cb && cb(null, added);\n    });\n  });\n};\nConsumer.prototype.removeTopics = function (topics, cb) {\n  topics = typeof topics === 'string' ? [topics] : topics;\n  this.payloads = this.payloads.filter(function (p) {\n    return !~topics.indexOf(p.topic);\n  });\n  this.client.removeTopicMetadata(topics, cb);\n};\nConsumer.prototype.close = function (force, cb) {\n  this.ready = false;\n  if (typeof force === 'function') {\n    cb = force;\n    force = false;\n  }\n  if (force) {\n    this.commit(force, function (err) {\n      if (err) {\n        return cb(err);\n      }\n      this.client.close(cb);\n    }.bind(this));\n  } else {\n    this.client.close(cb);\n  }\n};\nConsumer.prototype.setOffset = function (topic, partition, offset) {\n  this.payloads.every(function (p) {\n    if (p.topic === topic && p.partition == partition) {\n      // eslint-disable-line eqeqeq\n      p.offset = offset;\n      return false;\n    }\n    return true;\n  });\n};\nConsumer.prototype.pause = function () {\n  this.paused = true;\n};\nConsumer.prototype.resume = function () {\n  this.paused = false;\n  this.fetch();\n};\nConsumer.prototype.pauseTopics = function (topics) {\n  if (!this.pausedPayloads) this.pausedPayloads = [];\n  pauseOrResume(this.payloads, this.pausedPayloads, topics);\n};\nConsumer.prototype.resumeTopics = function (topics) {\n  if (!this.pausedPayloads) this.pausedPayloads = [];\n  var reFetch = !this.payloads.length;\n  pauseOrResume(this.pausedPayloads, this.payloads, topics);\n  reFetch = reFetch && this.payloads.length;\n  if (reFetch) this.fetch();\n};\nfunction pauseOrResume(payloads, nextPayloads, topics) {\n  if (!topics || !topics.length) return;\n  for (var i = 0, j = 0, l = payloads.length; j < l; i++, j++) {\n    if (isInTopics(payloads[i])) {\n      nextPayloads.push(payloads.splice(i, 1)[0]);\n      i--;\n    }\n  }\n  function isInTopics(p) {\n    return topics.some(function (topic) {\n      if (typeof topic === 'string') {\n        return p.topic === topic;\n      } else {\n        return p.topic === topic.topic && p.partition === topic.partition;\n      }\n    });\n  }\n}\nmodule.exports = Consumer;","map":{"version":3,"names":["require","util","_","EventEmitter","logger","utils","DEFAULTS","groupId","autoCommit","autoCommitIntervalMs","fetchMaxWaitMs","fetchMinBytes","fetchMaxBytes","fromOffset","encoding","nextId","id","Consumer","client","topics","options","call","Error","validateTopics","fetchCount","defaults","ready","paused","payloads","buildPayloads","connect","validateConfig","inherits","prototype","self","map","p","topic","partition","offset","maxBytes","metadata","init","on","debug","err","error","message","emit","topicNames","refreshMetadata","fetch","updateOffsets","setImmediate","length","topicExists","fetchOffset","initing","forEach","isEmpty","undefined","force","cb","arguments","committing","setTimeout","bind","pausedPayloads","concat","commits","filter","sendOffsetCommitRequest","commit","sendFetchRequest","sendOffsetFetchRequest","addTopics","added","reFetch","push","offsets","removeTopics","indexOf","removeTopicMetadata","close","setOffset","every","pause","resume","pauseTopics","pauseOrResume","resumeTopics","nextPayloads","i","j","l","isInTopics","splice","some","module","exports"],"sources":["D:/Project/VUEJSSPRING_CRUD_JWT/vue-crud-api-jwt-vuex/node_modules/kafka-node/lib/consumer.js"],"sourcesContent":["'use strict';\n\nvar util = require('util');\nvar _ = require('lodash');\nvar EventEmitter = require('events');\nvar logger = require('./logging')('kafka-node:Consumer');\nvar utils = require('./utils');\n\nvar DEFAULTS = {\n  groupId: 'kafka-node-group',\n  // Auto commit config\n  autoCommit: true,\n  autoCommitIntervalMs: 5000,\n  // Fetch message config\n  fetchMaxWaitMs: 100,\n  fetchMinBytes: 1,\n  fetchMaxBytes: 1024 * 1024,\n  fromOffset: false,\n  encoding: 'utf8'\n};\n\nvar nextId = (function () {\n  var id = 0;\n  return function () {\n    return id++;\n  };\n})();\n\nfunction Consumer (client, topics, options) {\n  EventEmitter.call(this);\n  if (!topics) {\n    throw new Error('Must have payloads');\n  }\n\n  utils.validateTopics(topics);\n\n  this.fetchCount = 0;\n  this.client = client;\n  this.options = _.defaults((options || {}), DEFAULTS);\n  this.ready = false;\n  this.paused = this.options.paused;\n  this.id = nextId();\n  this.payloads = this.buildPayloads(topics);\n  this.connect();\n  this.encoding = this.options.encoding;\n\n  if (this.options.groupId) {\n    utils.validateConfig('options.groupId', this.options.groupId);\n  }\n}\nutil.inherits(Consumer, EventEmitter);\n\nConsumer.prototype.buildPayloads = function (payloads) {\n  var self = this;\n  return payloads.map(function (p) {\n    if (typeof p !== 'object') p = { topic: p };\n    p.partition = p.partition || 0;\n    p.offset = p.offset || 0;\n    p.maxBytes = self.options.fetchMaxBytes;\n    p.metadata = 'm'; // metadata can be arbitrary\n    return p;\n  });\n};\n\nConsumer.prototype.connect = function () {\n  var self = this;\n  // Client already exists\n  this.ready = this.client.ready;\n  if (this.ready) this.init();\n\n  this.client.on('ready', function () {\n    logger.debug('consumer ready');\n    if (!self.ready) self.init();\n    self.ready = true;\n  });\n\n  this.client.on('error', function (err) {\n    logger.error('client error %s', err.message);\n    self.emit('error', err);\n  });\n\n  this.client.on('close', function () {\n    logger.debug('connection closed');\n  });\n\n  this.client.on('brokersChanged', function () {\n    var topicNames = self.payloads.map(function (p) {\n      return p.topic;\n    });\n\n    this.refreshMetadata(topicNames, function (err) {\n      if (err) return self.emit('error', err);\n      self.fetch();\n    });\n  });\n  // 'done' will be emit when a message fetch request complete\n  this.on('done', function (topics) {\n    self.updateOffsets(topics);\n    setImmediate(function () {\n      self.fetch();\n    });\n  });\n};\n\nConsumer.prototype.init = function () {\n  if (!this.payloads.length) {\n    return;\n  }\n\n  var self = this;\n  var topics = self.payloads.map(function (p) { return p.topic; });\n\n  self.client.topicExists(topics, function (err) {\n    if (err) {\n      return self.emit('error', err);\n    }\n\n    if (self.options.fromOffset) {\n      return self.fetch();\n    }\n\n    self.fetchOffset(self.payloads, function (err, topics) {\n      if (err) {\n        return self.emit('error', err);\n      }\n\n      self.updateOffsets(topics, true);\n      self.fetch();\n    });\n  });\n};\n\n/*\n * Update offset info in current payloads\n * @param {Object} Topic-partition-offset\n * @param {Boolean} Don't commit when initing consumer\n */\nConsumer.prototype.updateOffsets = function (topics, initing) {\n  this.payloads.forEach(function (p) {\n    if (!_.isEmpty(topics[p.topic]) && topics[p.topic][p.partition] !== undefined) {\n      var offset = topics[p.topic][p.partition];\n      if (offset === -1) offset = 0;\n      if (!initing) p.offset = offset + 1;\n      else p.offset = offset;\n    }\n  });\n\n  if (this.options.autoCommit && !initing) {\n    this.autoCommit(false, function (err) {\n      err && logger.debug('auto commit offset', err);\n    });\n  }\n};\n\nfunction autoCommit (force, cb) {\n  if (arguments.length === 1) {\n    cb = force;\n    force = false;\n  }\n\n  if (this.committing && !force) return cb(null, 'Offset committing');\n\n  this.committing = true;\n  setTimeout(function () {\n    this.committing = false;\n  }.bind(this), this.options.autoCommitIntervalMs);\n\n  var payloads = this.payloads;\n  if (this.pausedPayloads) payloads = payloads.concat(this.pausedPayloads);\n\n  var commits = payloads.filter(function (p) { return p.offset !== 0; });\n  if (commits.length) {\n    this.client.sendOffsetCommitRequest(this.options.groupId, commits, cb);\n  } else {\n    cb(null, 'Nothing to be committed');\n  }\n}\nConsumer.prototype.commit = Consumer.prototype.autoCommit = autoCommit;\n\nConsumer.prototype.fetch = function () {\n  if (!this.ready || this.paused) return;\n  this.client.sendFetchRequest(this, this.payloads, this.options.fetchMaxWaitMs, this.options.fetchMinBytes);\n};\n\nConsumer.prototype.fetchOffset = function (payloads, cb) {\n  this.client.sendOffsetFetchRequest(this.options.groupId, payloads, cb);\n};\n\nConsumer.prototype.addTopics = function (topics, cb, fromOffset) {\n  fromOffset = !!fromOffset;\n  var self = this;\n  if (!this.ready) {\n    setTimeout(function () {\n      self.addTopics(topics, cb, fromOffset);\n    }\n    , 100);\n    return;\n  }\n\n  // The default is that the topics is a string array of topic names\n  var topicNames = topics;\n\n  // If the topics is actually an object and not string we assume it is an array of payloads\n  if (typeof topics[0] === 'object') {\n    topicNames = topics.map(function (p) { return p.topic; });\n  }\n\n  this.client.addTopics(\n    topicNames,\n    function (err, added) {\n      if (err) return cb && cb(err, added);\n\n      var payloads = self.buildPayloads(topics);\n      var reFetch = !self.payloads.length;\n\n      if (fromOffset) {\n        payloads.forEach(function (p) {\n          self.payloads.push(p);\n        });\n        if (reFetch) self.fetch();\n        cb && cb(null, added);\n        return;\n      }\n\n      // update offset of topics that will be added\n      self.fetchOffset(payloads, function (err, offsets) {\n        if (err) return cb(err);\n        payloads.forEach(function (p) {\n          var offset = offsets[p.topic][p.partition];\n          if (offset === -1) offset = 0;\n          p.offset = offset;\n          self.payloads.push(p);\n        });\n        if (reFetch) self.fetch();\n        cb && cb(null, added);\n      });\n    }\n  );\n};\n\nConsumer.prototype.removeTopics = function (topics, cb) {\n  topics = typeof topics === 'string' ? [topics] : topics;\n  this.payloads = this.payloads.filter(function (p) {\n    return !~topics.indexOf(p.topic);\n  });\n\n  this.client.removeTopicMetadata(topics, cb);\n};\n\nConsumer.prototype.close = function (force, cb) {\n  this.ready = false;\n  if (typeof force === 'function') {\n    cb = force;\n    force = false;\n  }\n\n  if (force) {\n    this.commit(force, function (err) {\n      if (err) {\n        return cb(err);\n      }\n      this.client.close(cb);\n    }.bind(this));\n  } else {\n    this.client.close(cb);\n  }\n};\n\nConsumer.prototype.setOffset = function (topic, partition, offset) {\n  this.payloads.every(function (p) {\n    if (p.topic === topic && p.partition == partition) { // eslint-disable-line eqeqeq\n      p.offset = offset;\n      return false;\n    }\n    return true;\n  });\n};\n\nConsumer.prototype.pause = function () {\n  this.paused = true;\n};\n\nConsumer.prototype.resume = function () {\n  this.paused = false;\n  this.fetch();\n};\n\nConsumer.prototype.pauseTopics = function (topics) {\n  if (!this.pausedPayloads) this.pausedPayloads = [];\n  pauseOrResume(this.payloads, this.pausedPayloads, topics);\n};\n\nConsumer.prototype.resumeTopics = function (topics) {\n  if (!this.pausedPayloads) this.pausedPayloads = [];\n  var reFetch = !this.payloads.length;\n  pauseOrResume(this.pausedPayloads, this.payloads, topics);\n  reFetch = reFetch && this.payloads.length;\n  if (reFetch) this.fetch();\n};\n\nfunction pauseOrResume (payloads, nextPayloads, topics) {\n  if (!topics || !topics.length) return;\n\n  for (var i = 0, j = 0, l = payloads.length; j < l; i++, j++) {\n    if (isInTopics(payloads[i])) {\n      nextPayloads.push(\n        payloads.splice(i, 1)[0]\n      );\n      i--;\n    }\n  }\n\n  function isInTopics (p) {\n    return topics.some(function (topic) {\n      if (typeof topic === 'string') {\n        return p.topic === topic;\n      } else {\n        return p.topic === topic.topic && p.partition === topic.partition;\n      }\n    });\n  }\n}\n\nmodule.exports = Consumer;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}